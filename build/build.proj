<Project DefaultTargets="Build">

  <Import Project="$(MSBuildThisFileDirectory)directories.props" />

  <!-- Build Properties -->
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <BuildWithAnalyzer Condition="'$(BuildWithAnalyzer)' == ''">False</BuildWithAnalyzer>
    <BuildDesignAssembly Condition="'$(BuildDesignAssembly)' == ''">False</BuildDesignAssembly>
    <BuildPublicOnly Condition="'$(BuildPublicOnly)' == ''">False</BuildPublicOnly>
  </PropertyGroup>

  <!-- Projects to build -->
  <ItemGroup>
    <DesignProject Include="$(ProjectSrcDir)**\*.Design.csproj" />
    <DesignProject Include="$(InternalProjectSrcDir)**\*.Design.csproj" />

    <PublicProject Include="$(ProjectSrcDir)**\*.csproj" Condition="'$(Project)' == ''" />
    <PublicProject Include="$(ProjectSrcDir)\$(Project)\$(Project).csproj"
                   Condition="'$(Project)' != '' And Exists('$(ProjectSrcDir)\$(Project)\$(Project).csproj') " />
    <PublicProject Remove="@(DesignProject)" />

    <InternalProject Include="$(InternalProjectSrcDir)**\*.csproj" Condition="'$(Project)' == '' " />
    <InternalProject Include="$(InternalProjectSrcDir)\$(Project)\$(Project).csproj"
                     Condition="'$(Project)' != ''  And Exists('$(InternalProjectSrcDir)\$(Project)\$(Project).csproj')  " />
    <InternalProject Remove="@(DesignProject)" />

    <ProjectToBuild Include="@(DesignProject)" Condition="'$(BuildDesignAssembly)' == 'True' " />
    <ProjectToBuild Include="@(PublicProject)" Condition="'$(BuildDesignAssembly)' != 'True' " />
    <ProjectToBuild Include="@(InternalProject)" Condition="'$(BuildDesignAssembly)' != 'True' And '$(BuildPublicOnly)' != 'True'" />
  </ItemGroup>

  <!-- Nuspec files to pack -->
  <ItemGroup>
    <NuspecFiles Include="$(ProjectRootDir)pkg\**\*.nuspec" />
  </ItemGroup>

  <!--
    Target : Clean
    ==============
    Delete all artifacts,
    including the Artifacts/ directory and the obj and bin directories of all projects.
  -->
  <Target Name="Clean">

    <ItemGroup>
      <ProjectIntermediateAllFiles Include="$(ProjectSrcDir)**\obj\**" />
      <ProjectIntermediateAllFiles Include="$(ProjectSrcDir)**\bin\**" />
      <ProjectIntermediateAllFiles Include="$(InternalProjectSrcDir)**\obj\**" />
      <ProjectIntermediateAllFiles Include="$(InternalProjectSrcDir)**\bin\**" />
      <ProjectIntermediateDir Include="@(ProjectIntermediateAllFiles->'%(RootDir)%(Directory)'->Distinct())" />
    </ItemGroup>

    <ItemGroup>
      <DirToRemove Include="$(OutputBaseDir)" />
      <DirToRemove Include="@(ProjectIntermediateDir)" />
    </ItemGroup>

    <RemoveDir Directories="@(DirToRemove)" />

  </Target>

  <!--
    Target : Restore
    ==============
    Restore all projects.
  -->
  <Target Name="Restore">

    <MSBuild Projects="@(ProjectToBuild)"
             Properties="Configuration=$(Configuration);RestoreSources=$(RestoreSources);BuildWithAnalyzer=$(BuildWithAnalyzer)"
             BuildInParallel="false"
             Targets="Restore" />

  </Target>

  <!--
    Target : Build
    ==============
    Build all projects.
  -->
  <Target Name="Build">

    <MSBuild Projects="@(ProjectToBuild)"
             Properties="Configuration=$(Configuration);BuildWithAnalyzer=$(BuildWithAnalyzer)"
             BuildInParallel="true"
             UseResultsCache="true"
             Targets="Rebuild" />

    <MSBuild Projects="@(ProjectToBuild)"
             Properties="Configuration=$(Configuration)"
             BuildInParallel="false"
             Targets="CopyToArtifactsDirectory" />

  </Target>

  <!--
    Target : Pack
    ==============
    Generate nuget packages.
  -->
  <Target Name="Pack">

    <MSBuild Projects="$(MSBuildThisFileDirectory)pack.csproj"
             Properties="NoBuild=True"
             Targets="Restore" />

    <MSBuild Projects="$(MSBuildThisFileDirectory)pack.csproj"
             Properties="NoBuild=True;Version=$(Version);NuspecFile=%(NuspecFiles.Identity)"
             Targets="Pack" />

  </Target>

  <!--
    Target : Dummy
    ==============
    Generate dummy assemblies of all projects.
  -->
  <Target Name="Dummy">

    <PropertyGroup>
      <APIToolPath>$(MSBuildThisFileDirectory)..\tools\bin\APITool.dll</APIToolPath>
    </PropertyGroup>

    <MakeDir Directories="$(OutputDummyDir)" />
    <Exec Command="dotnet $([System.IO.Path]::GetFullPath('$(APIToolPath)')) dummy $(OutputPublicDir)ref $(OutputDummyDir) " />

  </Target>

</Project>
