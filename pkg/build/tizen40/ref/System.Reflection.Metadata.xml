<?xml version="1.0" encoding="utf-8"?><span>
<doc>
  <assembly>
    <name>System.Reflection.Metadata</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.CustomAttribute">
      
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttribute.Constructor">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttribute.DecodeValue``1(System.Reflection.Metadata.ICustomAttributeTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttribute.Parent">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttribute.Value">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.Equals(System.Reflection.Metadata.CustomAttributeHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.op_Equality(System.Reflection.Metadata.CustomAttributeHandle,System.Reflection.Metadata.CustomAttributeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.CustomAttributeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.CustomAttributeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.op_Implicit(System.Reflection.Metadata.CustomAttributeHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.op_Implicit(System.Reflection.Metadata.CustomAttributeHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandle.op_Inequality(System.Reflection.Metadata.CustomAttributeHandle,System.Reflection.Metadata.CustomAttributeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#CustomAttributeHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeNamedArgument`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeNamedArgument`1.#ctor(System.String,System.Reflection.Metadata.CustomAttributeNamedArgumentKind,`0,System.Object)">
      <param name="name"></param>
      <param name="kind"></param>
      <param name="type"></param>
      <param name="value"></param>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeNamedArgument`1.Kind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeNamedArgument`1.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeNamedArgument`1.Type">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeNamedArgument`1.Value">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeNamedArgumentKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.CustomAttributeNamedArgumentKind.Field">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.CustomAttributeNamedArgumentKind.Property">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeTypedArgument`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeTypedArgument`1.#ctor(`0,System.Object)">
      <param name="type"></param>
      <param name="value"></param>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeTypedArgument`1.Type">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeTypedArgument`1.Value">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomAttributeValue`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.CustomAttributeValue`1.#ctor(System.Collections.Immutable.ImmutableArray{System.Reflection.Metadata.CustomAttributeTypedArgument{`0}},System.Collections.Immutable.ImmutableArray{System.Reflection.Metadata.CustomAttributeNamedArgument{`0}})">
      <param name="fixedArguments"></param>
      <param name="namedArguments"></param>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeValue`1.FixedArguments">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomAttributeValue`1.NamedArguments">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomDebugInformation">
      
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformation.Kind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformation.Parent">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformation.Value">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomDebugInformationHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.Equals(System.Reflection.Metadata.CustomDebugInformationHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformationHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.op_Equality(System.Reflection.Metadata.CustomDebugInformationHandle,System.Reflection.Metadata.CustomDebugInformationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.CustomDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.CustomDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.op_Implicit(System.Reflection.Metadata.CustomDebugInformationHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.op_Implicit(System.Reflection.Metadata.CustomDebugInformationHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandle.op_Inequality(System.Reflection.Metadata.CustomDebugInformationHandle,System.Reflection.Metadata.CustomDebugInformationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.CustomDebugInformationHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.CustomDebugInformationHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#CustomDebugInformationHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.CustomDebugInformationHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DebugMetadataHeader">
      
    </member>
    <member name="P:System.Reflection.Metadata.DebugMetadataHeader.EntryPoint">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DebugMetadataHeader.Id">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DeclarativeSecurityAttribute">
      
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttribute.Action">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttribute.Parent">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttribute.PermissionSet">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.Equals(System.Reflection.Metadata.DeclarativeSecurityAttributeHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.op_Equality(System.Reflection.Metadata.DeclarativeSecurityAttributeHandle,System.Reflection.Metadata.DeclarativeSecurityAttributeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.DeclarativeSecurityAttributeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.DeclarativeSecurityAttributeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.op_Implicit(System.Reflection.Metadata.DeclarativeSecurityAttributeHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.op_Implicit(System.Reflection.Metadata.DeclarativeSecurityAttributeHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle.op_Inequality(System.Reflection.Metadata.DeclarativeSecurityAttributeHandle,System.Reflection.Metadata.DeclarativeSecurityAttributeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#DeclarativeSecurityAttributeHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DeclarativeSecurityAttributeHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Document">
      
    </member>
    <member name="P:System.Reflection.Metadata.Document.Hash">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Document.HashAlgorithm">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Document.Language">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Document.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DocumentHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.Equals(System.Reflection.Metadata.DocumentHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DocumentHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.op_Equality(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.DocumentHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.DocumentHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.DocumentHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.op_Implicit(System.Reflection.Metadata.DocumentHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.op_Implicit(System.Reflection.Metadata.DocumentHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandle.op_Inequality(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.DocumentHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DocumentHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.DocumentHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DocumentHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.DocumentHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.DocumentHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#DocumentHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.DocumentNameBlobHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.Equals(System.Reflection.Metadata.DocumentNameBlobHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.DocumentNameBlobHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.op_Equality(System.Reflection.Metadata.DocumentNameBlobHandle,System.Reflection.Metadata.DocumentNameBlobHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.op_Explicit(System.Reflection.Metadata.BlobHandle to System.Reflection.Metadata.DocumentNameBlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.op_Implicit(System.Reflection.Metadata.DocumentNameBlobHandle to System.Reflection.Metadata.BlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.DocumentNameBlobHandle.op_Inequality(System.Reflection.Metadata.DocumentNameBlobHandle,System.Reflection.Metadata.DocumentNameBlobHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ArrayShapeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ArrayShapeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ArrayShapeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ArrayShapeEncoder.Shape(System.Int32,System.Collections.Immutable.ImmutableArray{System.Int32},System.Collections.Immutable.ImmutableArray{System.Int32})">
      <param name="rank"></param>
      <param name="sizes"></param>
      <param name="lowerBounds"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.BlobEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.BlobEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.CustomAttributeSignature(System.Action{System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder},System.Action{System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder})">
      <param name="fixedArguments"></param>
      <param name="namedArguments"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.CustomAttributeSignature(System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder@,System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder@)">
      <param name="fixedArguments"></param>
      <param name="namedArguments"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.LocalVariableSignature(System.Int32)">
      <param name="variableCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.MethodSignature(System.Reflection.Metadata.SignatureCallingConvention,System.Int32,System.Boolean)">
      <param name="convention"></param>
      <param name="genericParameterCount"></param>
      <param name="isInstanceMethod"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.MethodSpecificationSignature(System.Int32)">
      <param name="genericArgumentCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.PermissionSetArguments(System.Int32)">
      <param name="argumentCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.PermissionSetBlob(System.Int32)">
      <param name="attributeCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.PropertySignature(System.Boolean)">
      <param name="isInstanceProperty"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.BlobEncoder.TypeSpecificationSignature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.CodedIndex">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.CustomAttributeType(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasConstant(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasCustomAttribute(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasCustomDebugInformation(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasDeclSecurity(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasFieldMarshal(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.HasSemantics(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.Implementation(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.MemberForwarded(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.MemberRefParent(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.MethodDefOrRef(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.ResolutionScope(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRef(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ControlFlowBuilder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ControlFlowBuilder.#ctor">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ControlFlowBuilder.AddCatchRegion(System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="tryStart"></param>
      <param name="tryEnd"></param>
      <param name="handlerStart"></param>
      <param name="handlerEnd"></param>
      <param name="catchType"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ControlFlowBuilder.AddFaultRegion(System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="tryStart"></param>
      <param name="tryEnd"></param>
      <param name="handlerStart"></param>
      <param name="handlerEnd"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ControlFlowBuilder.AddFilterRegion(System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="tryStart"></param>
      <param name="tryEnd"></param>
      <param name="handlerStart"></param>
      <param name="handlerEnd"></param>
      <param name="filterStart"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ControlFlowBuilder.AddFinallyRegion(System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="tryStart"></param>
      <param name="tryEnd"></param>
      <param name="handlerStart"></param>
      <param name="handlerEnd"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder.ElementType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder.ObjectArray">
      
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Boolean">
      
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Byte">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Char">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Double">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Enum(System.String)">
      <param name="enumTypeName"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Int16">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Int32">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Int64">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.PrimitiveType(System.Reflection.Metadata.PrimitiveSerializationTypeCode)">
      <param name="type"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.SByte">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.Single">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.String">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.SystemType">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.UInt16">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.UInt32">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder.UInt64">
      
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomAttributeNamedArgumentsEncoder.Count(System.Int32)">
      <param name="count"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.CustomModifiersEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomModifiersEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.CustomModifiersEncoder.AddModifier(System.Reflection.Metadata.EntityHandle,System.Boolean)">
      <param name="type"></param>
      <param name="isOptional"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.CustomModifiersEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.#ctor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)">
      <param name="handle"></param>
      <param name="operation"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.Equals(System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.Handle">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.Operation">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.EditAndContinueOperation">
      
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.EditAndContinueOperation.AddEvent">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.EditAndContinueOperation.AddField">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.EditAndContinueOperation.AddMethod">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.EditAndContinueOperation.AddParameter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.EditAndContinueOperation.AddProperty">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.EditAndContinueOperation.Default">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)">
      <param name="kind"></param>
      <param name="tryOffset"></param>
      <param name="tryLength"></param>
      <param name="handlerOffset"></param>
      <param name="handlerLength"></param>
      <param name="catchType"></param>
      <param name="filterOffset"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)">
      <param name="tryOffset"></param>
      <param name="tryLength"></param>
      <param name="handlerOffset"></param>
      <param name="handlerLength"></param>
      <param name="catchType"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)">
      <param name="tryOffset"></param>
      <param name="tryLength"></param>
      <param name="handlerOffset"></param>
      <param name="handlerLength"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <param name="tryOffset"></param>
      <param name="tryLength"></param>
      <param name="handlerOffset"></param>
      <param name="handlerLength"></param>
      <param name="filterOffset"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)">
      <param name="tryOffset"></param>
      <param name="tryLength"></param>
      <param name="handlerOffset"></param>
      <param name="handlerLength"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)">
      <param name="startOffset"></param>
      <param name="length"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)">
      <param name="exceptionRegionCount"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ExportedTypeExtensions">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ExportedTypeExtensions.GetTypeDefinitionId(System.Reflection.Metadata.ExportedType)">
      <param name="exportedType"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder.AddArgument">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.FixedArgumentsEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.FunctionPointerAttributes">
      
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.FunctionPointerAttributes.HasExplicitThis">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.FunctionPointerAttributes.HasThis">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.FunctionPointerAttributes.None">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder.AddArgument">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.GenericTypeArgumentsEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.HeapIndex">
      
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.HeapIndex.Blob">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.HeapIndex.Guid">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.HeapIndex.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.HeapIndex.UserString">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.InstructionEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.#ctor(System.Reflection.Metadata.BlobBuilder,System.Reflection.Metadata.Ecma335.ControlFlowBuilder)">
      <param name="codeBuilder"></param>
      <param name="controlFlowBuilder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Branch(System.Reflection.Metadata.ILOpCode,System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="code"></param>
      <param name="label"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Call(System.Reflection.Metadata.EntityHandle)">
      <param name="methodHandle"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Call(System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="methodHandle"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Call(System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="methodHandle"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Call(System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="methodHandle"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.CallIndirect(System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="signature"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.InstructionEncoder.CodeBuilder">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.InstructionEncoder.ControlFlowBuilder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.DefineLabel">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadArgument(System.Int32)">
      <param name="argumentIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadArgumentAddress(System.Int32)">
      <param name="argumentIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadConstantI4(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadConstantI8(System.Int64)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadConstantR4(System.Single)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadConstantR8(System.Double)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadLocal(System.Int32)">
      <param name="slotIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadLocalAddress(System.Int32)">
      <param name="slotIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)">
      <param name="handle"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.MarkLabel(System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="label"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.InstructionEncoder.Offset">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.OpCode(System.Reflection.Metadata.ILOpCode)">
      <param name="code"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.StoreArgument(System.Int32)">
      <param name="argumentIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.StoreLocal(System.Int32)">
      <param name="slotIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Token(System.Int32)">
      <param name="token"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.Token(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.LabelHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LabelHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LabelHandle.Equals(System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LabelHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.LabelHandle.Id">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.LabelHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LabelHandle.op_Equality(System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LabelHandle.op_Inequality(System.Reflection.Metadata.Ecma335.LabelHandle,System.Reflection.Metadata.Ecma335.LabelHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.LiteralEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.LiteralEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.Scalar">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.TaggedScalar(System.Action{System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder},System.Action{System.Reflection.Metadata.Ecma335.ScalarEncoder})">
      <param name="type"></param>
      <param name="scalar"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.TaggedScalar(System.Reflection.Metadata.Ecma335.CustomAttributeElementTypeEncoder@,System.Reflection.Metadata.Ecma335.ScalarEncoder@)">
      <param name="type"></param>
      <param name="scalar"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.TaggedVector(System.Action{System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder},System.Action{System.Reflection.Metadata.Ecma335.VectorEncoder})">
      <param name="arrayType"></param>
      <param name="vector"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.TaggedVector(System.Reflection.Metadata.Ecma335.CustomAttributeArrayTypeEncoder@,System.Reflection.Metadata.Ecma335.VectorEncoder@)">
      <param name="arrayType"></param>
      <param name="vector"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralEncoder.Vector">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.LiteralsEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralsEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LiteralsEncoder.AddLiteral">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.LiteralsEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.LocalVariablesEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LocalVariablesEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LocalVariablesEncoder.AddVariable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.LocalVariablesEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder.CustomModifiers">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder.Type(System.Boolean,System.Boolean)">
      <param name="isByRef"></param>
      <param name="isPinned"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.LocalVariableTypeEncoder.TypedReference">
      
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MetadataAggregator">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Reflection.Metadata.MetadataReader,System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})">
      <param name="baseReader"></param>
      <param name="deltaReaders"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataAggregator.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Int32},System.Collections.Generic.IReadOnlyList{System.Reflection.Metadata.MetadataReader})">
      <param name="baseTableRowCounts"></param>
      <param name="baseHeapSizes"></param>
      <param name="deltaReaders"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataAggregator.GetGenerationHandle(System.Reflection.Metadata.Handle,System.Int32@)">
      <param name="handle"></param>
      <param name="generation"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MetadataBuilder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <param name="userStringHeapStartOffset"></param>
      <param name="stringHeapStartOffset"></param>
      <param name="blobHeapStartOffset"></param>
      <param name="guidHeapStartOffset"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)">
      <param name="name"></param>
      <param name="version"></param>
      <param name="culture"></param>
      <param name="publicKey"></param>
      <param name="flags"></param>
      <param name="hashAlgorithm"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)">
      <param name="name"></param>
      <param name="hashValue"></param>
      <param name="containsMetadata"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)">
      <param name="name"></param>
      <param name="version"></param>
      <param name="culture"></param>
      <param name="publicKeyOrToken"></param>
      <param name="flags"></param>
      <param name="hashValue"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)">
      <param name="parent"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="parent"></param>
      <param name="constructor"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="parent"></param>
      <param name="kind"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)">
      <param name="parent"></param>
      <param name="action"></param>
      <param name="permissionSet"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)">
      <param name="name"></param>
      <param name="hashAlgorithm"></param>
      <param name="hash"></param>
      <param name="language"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)">
      <param name="entity"></param>
      <param name="code"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)">
      <param name="entity"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="declaringType"></param>
      <param name="eventList"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)">
      <param name="attributes"></param>
      <param name="namespace"></param>
      <param name="name"></param>
      <param name="implementation"></param>
      <param name="typeDefinitionId"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)">
      <param name="field"></param>
      <param name="offset"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)">
      <param name="field"></param>
      <param name="offset"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)">
      <param name="parent"></param>
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="genericParameter"></param>
      <param name="constraint"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="parentScope"></param>
      <param name="imports"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="type"></param>
      <param name="implementedInterface"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="name"></param>
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)">
      <param name="method"></param>
      <param name="importScope"></param>
      <param name="variableList"></param>
      <param name="constantList"></param>
      <param name="startOffset"></param>
      <param name="length"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)">
      <param name="attributes"></param>
      <param name="index"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)">
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="implementation"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="parent"></param>
      <param name="descriptor"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="parent"></param>
      <param name="name"></param>
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="document"></param>
      <param name="sequencePoints"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)">
      <param name="attributes"></param>
      <param name="implAttributes"></param>
      <param name="name"></param>
      <param name="signature"></param>
      <param name="bodyOffset"></param>
      <param name="parameterList"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="type"></param>
      <param name="methodBody"></param>
      <param name="methodDeclaration"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="method"></param>
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="module"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="association"></param>
      <param name="semantics"></param>
      <param name="methodDefinition"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="method"></param>
      <param name="instantiation"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)">
      <param name="generation"></param>
      <param name="moduleName"></param>
      <param name="mvid"></param>
      <param name="encId"></param>
      <param name="encBaseId"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)">
      <param name="moduleName"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="type"></param>
      <param name="enclosingType"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)">
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="sequenceNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="attributes"></param>
      <param name="name"></param>
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="declaringType"></param>
      <param name="propertyList"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)">
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="moveNextMethod"></param>
      <param name="kickoffMethod"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="attributes"></param>
      <param name="namespace"></param>
      <param name="name"></param>
      <param name="baseType"></param>
      <param name="fieldList"></param>
      <param name="methodList"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)">
      <param name="type"></param>
      <param name="packingSize"></param>
      <param name="size"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)">
      <param name="resolutionScope"></param>
      <param name="namespace"></param>
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)">
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)">
      <param name="value"></param>
      <param name="allowUnpairedSurrogates"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)">
      <param name="guid"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)">
      <param name="table"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)">
      <param name="length"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)">
      <param name="heap"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)">
      <param name="table"></param>
      <param name="rowCount"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)">
      <param name="reader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)">
      <param name="reader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)">
      <param name="reader"></param>
      <param name="heapIndex"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)">
      <param name="reader"></param>
      <param name="heapIndex"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)">
      <param name="reader"></param>
      <param name="tableIndex"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)">
      <param name="reader"></param>
      <param name="tableIndex"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)">
      <param name="reader"></param>
      <param name="tableIndex"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)">
      <param name="reader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)">
      <param name="reader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.ResolveSignatureTypeKind(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle,System.Byte)">
      <param name="reader"></param>
      <param name="typeHandle"></param>
      <param name="rawTypeKind"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MetadataRootBuilder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataRootBuilder.#ctor(System.Reflection.Metadata.Ecma335.MetadataBuilder,System.String,System.Boolean)">
      <param name="tablesAndHeaps"></param>
      <param name="metadataVersion"></param>
      <param name="suppressValidation"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MetadataRootBuilder.MetadataVersion">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataRootBuilder.Serialize(System.Reflection.Metadata.BlobBuilder,System.Int32,System.Int32)">
      <param name="builder"></param>
      <param name="methodBodyStreamRva"></param>
      <param name="mappedFieldDataStreamRva"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MetadataRootBuilder.Sizes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MetadataRootBuilder.SuppressValidation">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MetadataSizes">
      
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MetadataSizes.ExternalRowCounts">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataSizes.GetAlignedHeapSize(System.Reflection.Metadata.Ecma335.HeapIndex)">
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MetadataSizes.HeapSizes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MetadataSizes.RowCounts">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MetadataTokens">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.AssemblyFileHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.AssemblyReferenceHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.BlobHandle(System.Int32)">
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.ConstantHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.CustomAttributeHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.CustomDebugInformationHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.DeclarativeSecurityAttributeHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.DocumentHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.DocumentNameBlobHandle(System.Int32)">
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.EntityHandle(System.Int32)">
      <param name="token"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.EntityHandle(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)">
      <param name="tableIndex"></param>
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.EventDefinitionHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.ExportedTypeHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.FieldDefinitionHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GenericParameterConstraintHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GenericParameterHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetHeapOffset(System.Reflection.Metadata.BlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetHeapOffset(System.Reflection.Metadata.GuidHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetHeapOffset(System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetHeapOffset(System.Reflection.Metadata.StringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetHeapOffset(System.Reflection.Metadata.UserStringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetHeapOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Handle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetRowNumber(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetRowNumber(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetToken(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.EntityHandle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetToken(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Handle)">
      <param name="reader"></param>
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetToken(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GetToken(System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.GuidHandle(System.Int32)">
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.Handle(System.Int32)">
      <param name="token"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.Handle(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)">
      <param name="tableIndex"></param>
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.MetadataTokens.HeapCount">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.ImportScopeHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.InterfaceImplementationHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.LocalConstantHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.LocalScopeHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.LocalVariableHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.ManifestResourceHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.MemberReferenceHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDebugInformationHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDefinitionHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.MethodImplementationHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.MethodSpecificationHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.ModuleReferenceHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.ParameterHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.PropertyDefinitionHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.StandaloneSignatureHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.StringHandle(System.Int32)">
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.MetadataTokens.TableCount">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.TryGetHeapIndex(System.Reflection.Metadata.HandleKind,System.Reflection.Metadata.Ecma335.HeapIndex@)">
      <param name="type"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.TryGetTableIndex(System.Reflection.Metadata.HandleKind,System.Reflection.Metadata.Ecma335.TableIndex@)">
      <param name="type"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.TypeDefinitionHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.TypeReferenceHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.TypeSpecificationHandle(System.Int32)">
      <param name="rowNumber"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MetadataTokens.UserStringHandle(System.Int32)">
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MethodBodyAttributes">
      
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.MethodBodyAttributes.InitLocals">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.MethodBodyAttributes.None">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody">
      
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody.ExceptionRegions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody.Instructions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.MethodBody.Offset">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.AddMethodBody(System.Reflection.Metadata.Ecma335.InstructionEncoder,System.Int32,System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.Ecma335.MethodBodyAttributes)">
      <param name="instructionEncoder"></param>
      <param name="maxStack"></param>
      <param name="localVariablesSignature"></param>
      <param name="attributes"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.AddMethodBody(System.Int32,System.Int32,System.Int32,System.Boolean,System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.Ecma335.MethodBodyAttributes)">
      <param name="codeSize"></param>
      <param name="maxStack"></param>
      <param name="exceptionRegionCount"></param>
      <param name="hasSmallExceptionRegions"></param>
      <param name="localVariablesSignature"></param>
      <param name="attributes"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MethodBodyStreamEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.MethodSignatureEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MethodSignatureEncoder.#ctor(System.Reflection.Metadata.BlobBuilder,System.Boolean)">
      <param name="builder"></param>
      <param name="hasVarArgs"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MethodSignatureEncoder.Builder">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.MethodSignatureEncoder.HasVarArgs">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MethodSignatureEncoder.Parameters(System.Int32,System.Action{System.Reflection.Metadata.Ecma335.ReturnTypeEncoder},System.Action{System.Reflection.Metadata.Ecma335.ParametersEncoder})">
      <param name="parameterCount"></param>
      <param name="returnType"></param>
      <param name="parameters"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.MethodSignatureEncoder.Parameters(System.Int32,System.Reflection.Metadata.Ecma335.ReturnTypeEncoder@,System.Reflection.Metadata.Ecma335.ParametersEncoder@)">
      <param name="parameterCount"></param>
      <param name="returnType"></param>
      <param name="parameters"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder.AddArgument(System.Boolean,System.Action{System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder},System.Action{System.Reflection.Metadata.Ecma335.NameEncoder},System.Action{System.Reflection.Metadata.Ecma335.LiteralEncoder})">
      <param name="isField"></param>
      <param name="type"></param>
      <param name="name"></param>
      <param name="literal"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder.AddArgument(System.Boolean,System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder@,System.Reflection.Metadata.Ecma335.NameEncoder@,System.Reflection.Metadata.Ecma335.LiteralEncoder@)">
      <param name="isField"></param>
      <param name="type"></param>
      <param name="name"></param>
      <param name="literal"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.NamedArgumentsEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder.Object">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder.ScalarType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NamedArgumentTypeEncoder.SZArray">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.NameEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NameEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.NameEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.NameEncoder.Name(System.String)">
      <param name="name"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ParametersEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParametersEncoder.#ctor(System.Reflection.Metadata.BlobBuilder,System.Boolean)">
      <param name="builder"></param>
      <param name="hasVarArgs"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParametersEncoder.AddParameter">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ParametersEncoder.Builder">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ParametersEncoder.HasVarArgs">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParametersEncoder.StartVarArgs">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ParameterTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParameterTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ParameterTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParameterTypeEncoder.CustomModifiers">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParameterTypeEncoder.Type(System.Boolean)">
      <param name="isByRef"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ParameterTypeEncoder.TypedReference">
      
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.PermissionSetEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.PermissionSetEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.PermissionSetEncoder.AddPermission(System.String,System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="typeName"></param>
      <param name="encodedArguments"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.PermissionSetEncoder.AddPermission(System.String,System.Reflection.Metadata.BlobBuilder)">
      <param name="typeName"></param>
      <param name="encodedArguments"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.PermissionSetEncoder.Builder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.PortablePdbBuilder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.PortablePdbBuilder.#ctor(System.Reflection.Metadata.Ecma335.MetadataBuilder,System.Collections.Immutable.ImmutableArray{System.Int32},System.Reflection.Metadata.MethodDefinitionHandle,System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Blob},System.Reflection.Metadata.BlobContentId})">
      <param name="tablesAndHeaps"></param>
      <param name="typeSystemRowCounts"></param>
      <param name="entryPoint"></param>
      <param name="idProvider"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.PortablePdbBuilder.FormatVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.PortablePdbBuilder.IdProvider">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.PortablePdbBuilder.MetadataVersion">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.PortablePdbBuilder.Serialize(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder.CustomModifiers">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder.Type(System.Boolean)">
      <param name="isByRef"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder.TypedReference">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ReturnTypeEncoder.Void">
      
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.ScalarEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ScalarEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.ScalarEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ScalarEncoder.Constant(System.Object)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ScalarEncoder.NullArray">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.ScalarEncoder.SystemType(System.String)">
      <param name="serializedTypeName"></param>
    </member>
    <member name="T:System.Reflection.AssemblyFlags">
      
    </member>
    <member name="F:System.Reflection.AssemblyFlags.ContentTypeMask">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyFlags.DisableJitCompileOptimizer">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyFlags.EnableJitCompileTracking">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyFlags.PublicKey">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyFlags.Retargetable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyFlags.WindowsRuntime">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.AssemblyHashAlgorithm">
      
    </member>
    <member name="F:System.Reflection.AssemblyHashAlgorithm.MD5">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyHashAlgorithm.None">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyHashAlgorithm.Sha1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyHashAlgorithm.Sha256">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyHashAlgorithm.Sha384">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.AssemblyHashAlgorithm.Sha512">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.DeclarativeSecurityAction">
      
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.Assert">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.Demand">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.Deny">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.InheritanceDemand">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.LinkDemand">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.None">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.PermitOnly">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.RequestMinimum">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.RequestOptional">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.DeclarativeSecurityAction.RequestRefuse">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.ManifestResourceAttributes">
      
    </member>
    <member name="F:System.Reflection.ManifestResourceAttributes.Private">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.ManifestResourceAttributes.Public">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.ManifestResourceAttributes.VisibilityMask">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ArrayShape">
      
    </member>
    <member name="M:System.Reflection.Metadata.ArrayShape.#ctor(System.Int32,System.Collections.Immutable.ImmutableArray{System.Int32},System.Collections.Immutable.ImmutableArray{System.Int32})">
      <param name="rank"></param>
      <param name="sizes"></param>
      <param name="lowerBounds"></param>
    </member>
    <member name="P:System.Reflection.Metadata.ArrayShape.LowerBounds">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ArrayShape.Rank">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ArrayShape.Sizes">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinition.Culture">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinition.Flags">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinition.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinition.GetDeclarativeSecurityAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinition.HashAlgorithm">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinition.PublicKey">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinition.Version">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.Equals(System.Reflection.Metadata.AssemblyDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.op_Equality(System.Reflection.Metadata.AssemblyDefinitionHandle,System.Reflection.Metadata.AssemblyDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.AssemblyDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.AssemblyDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.op_Implicit(System.Reflection.Metadata.AssemblyDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.op_Implicit(System.Reflection.Metadata.AssemblyDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyDefinitionHandle.op_Inequality(System.Reflection.Metadata.AssemblyDefinitionHandle,System.Reflection.Metadata.AssemblyDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyFile">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFile.ContainsMetadata">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFile.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFile.HashValue">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFile.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyFileHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.Equals(System.Reflection.Metadata.AssemblyFileHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFileHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.op_Equality(System.Reflection.Metadata.AssemblyFileHandle,System.Reflection.Metadata.AssemblyFileHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.AssemblyFileHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.AssemblyFileHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.op_Implicit(System.Reflection.Metadata.AssemblyFileHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.op_Implicit(System.Reflection.Metadata.AssemblyFileHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandle.op_Inequality(System.Reflection.Metadata.AssemblyFileHandle,System.Reflection.Metadata.AssemblyFileHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyFileHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyFileHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#AssemblyFileHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyFileHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyReference">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReference.Culture">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReference.Flags">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReference.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReference.HashValue">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReference.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReference.PublicKeyOrToken">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReference.Version">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyReferenceHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.Equals(System.Reflection.Metadata.AssemblyReferenceHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReferenceHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.op_Equality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.AssemblyReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.AssemblyReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.op_Implicit(System.Reflection.Metadata.AssemblyReferenceHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.op_Implicit(System.Reflection.Metadata.AssemblyReferenceHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandle.op_Inequality(System.Reflection.Metadata.AssemblyReferenceHandle,System.Reflection.Metadata.AssemblyReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.AssemblyReferenceHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.AssemblyReferenceHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#AssemblyReferenceHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.AssemblyReferenceHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Blob">
      
    </member>
    <member name="M:System.Reflection.Metadata.Blob.GetBytes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Blob.IsDefault">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Blob.Length">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.BlobBuilder.Blobs">
      
    </member>
    <member name="P:System.Reflection.Metadata.BlobBuilder.Blobs.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Blobs.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Blobs.MoveNext">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Blobs.Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Blobs.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#Blob}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Blobs.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobBuilder.Blobs.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Blobs.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.BlobBuilder">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.#ctor(System.Int32)">
      <param name="capacity"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Align(System.Int32)">
      <param name="alignment"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.AllocateChunk(System.Int32)">
      <param name="minimalSize"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobBuilder.ChunkCapacity">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Clear">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.ContentEquals(System.Reflection.Metadata.BlobBuilder)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobBuilder.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.Free">
      
    </member>
    <member name="P:System.Reflection.Metadata.BlobBuilder.FreeBytes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.FreeChunk">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.GetBlobs">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.LinkPrefix(System.Reflection.Metadata.BlobBuilder)">
      <param name="prefix"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.LinkSuffix(System.Reflection.Metadata.BlobBuilder)">
      <param name="suffix"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.PadTo(System.Int32)">
      <param name="position"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.ReserveBytes(System.Int32)">
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.ToArray">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.ToArray(System.Int32,System.Int32)">
      <param name="start"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.ToImmutableArray">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.ToImmutableArray(System.Int32,System.Int32)">
      <param name="start"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.TryWriteBytes(System.IO.Stream,System.Int32)">
      <param name="source"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBoolean(System.Boolean)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteByte(System.Byte)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBytes(System.Byte[],System.Int32,System.Int32)">
      <param name="buffer"></param>
      <param name="start"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBytes(System.Byte*,System.Int32)">
      <param name="buffer"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBytes(System.Collections.Immutable.ImmutableArray{System.Byte},System.Int32,System.Int32)">
      <param name="buffer"></param>
      <param name="start"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBytes(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="buffer"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBytes(System.Byte[])">
      <param name="buffer"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteBytes(System.Byte,System.Int32)">
      <param name="value"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteCompressedInteger(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteCompressedSignedInteger(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteConstant(System.Object)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteContentTo(System.IO.Stream)">
      <param name="destination"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteContentTo(System.Reflection.Metadata.BlobBuilder)">
      <param name="destination"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteContentTo(System.Reflection.Metadata.BlobWriter@)">
      <param name="destination"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteDateTime(System.DateTime)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteDecimal(System.Decimal)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteDouble(System.Double)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteGuid(System.Guid)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteInt16(System.Int16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteInt16BE(System.Int16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteInt32(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteInt32BE(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteInt64(System.Int64)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteReference(System.Int32,System.Boolean)">
      <param name="reference"></param>
      <param name="isSmall"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteSByte(System.SByte)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteSerializedString(System.String)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteSingle(System.Single)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUInt16(System.UInt16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUInt16BE(System.UInt16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUInt32(System.UInt32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUInt32BE(System.UInt32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUInt64(System.UInt64)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUserString(System.String)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUTF16(System.Char[])">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUTF16(System.String)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobBuilder.WriteUTF8(System.String,System.Boolean)">
      <param name="value"></param>
      <param name="allowUnpairedSurrogates"></param>
    </member>
    <member name="T:System.Reflection.Metadata.BlobContentId">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.#ctor(System.Byte[])">
      <param name="id"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="id"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.#ctor(System.Guid,System.UInt32)">
      <param name="guid"></param>
      <param name="stamp"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.Equals(System.Reflection.Metadata.BlobContentId)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.FromHash(System.Byte[])">
      <param name="hashCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.FromHash(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="hashCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.GetHashCode">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.GetTimeBasedProvider">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobContentId.Guid">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobContentId.IsDefault">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.op_Equality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobContentId.op_Inequality(System.Reflection.Metadata.BlobContentId,System.Reflection.Metadata.BlobContentId)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobContentId.Stamp">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.BlobHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.Equals(System.Reflection.Metadata.BlobHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.op_Equality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.BlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.op_Implicit(System.Reflection.Metadata.BlobHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobHandle.op_Inequality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.BlobReader">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.#ctor(System.Byte*,System.Int32)">
      <param name="buffer"></param>
      <param name="length"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.Align(System.Byte)">
      <param name="alignment"></param>
    </member>
    <member name="P:System.Reflection.Metadata.BlobReader.CurrentPointer">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.IndexOf(System.Byte)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobReader.Length">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobReader.Offset">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadBlobHandle">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadBoolean">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadByte">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadBytes(System.Int32,System.Byte[],System.Int32)">
      <param name="byteCount"></param>
      <param name="buffer"></param>
      <param name="bufferOffset"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadBytes(System.Int32)">
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadChar">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadCompressedInteger">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadCompressedSignedInteger">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadConstant(System.Reflection.Metadata.ConstantTypeCode)">
      <param name="typeCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadDateTime">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadDecimal">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadDouble">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadGuid">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadInt16">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadInt32">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadInt64">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadSByte">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadSerializationTypeCode">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadSerializedString">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadSignatureHeader">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadSignatureTypeCode">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadSingle">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadTypeHandle">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadUInt16">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadUInt32">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadUInt64">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadUTF16(System.Int32)">
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.ReadUTF8(System.Int32)">
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobReader.RemainingBytes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.SeekOffset(System.Int32)">
      <param name="offset"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.SkipBytes(System.Int32)">
      <param name="count"></param>
    </member>
    <member name="P:System.Reflection.Metadata.BlobReader.StartPointer">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.TryReadCompressedInteger(System.Int32@)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobReader.TryReadCompressedSignedInteger(System.Int32@)">
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.BlobWriter">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.#ctor(System.Byte[])">
      <param name="buffer"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.#ctor(System.Int32)">
      <param name="size"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.#ctor(System.Reflection.Metadata.Blob)">
      <param name="blob"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.#ctor(System.Byte[],System.Int32,System.Int32)">
      <param name="buffer"></param>
      <param name="start"></param>
      <param name="count"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.Align(System.Int32)">
      <param name="alignment"></param>
    </member>
    <member name="P:System.Reflection.Metadata.BlobWriter.Blob">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.Clear">
      
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.ContentEquals(System.Reflection.Metadata.BlobWriter)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobWriter.Length">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.BlobWriter.Offset">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.PadTo(System.Int32)">
      <param name="offset"></param>
    </member>
    <member name="P:System.Reflection.Metadata.BlobWriter.RemainingBytes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.ToArray">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.ToArray(System.Int32,System.Int32)">
      <param name="start"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.ToImmutableArray">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.ToImmutableArray(System.Int32,System.Int32)">
      <param name="start"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBoolean(System.Boolean)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteByte(System.Byte)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Byte[],System.Int32,System.Int32)">
      <param name="buffer"></param>
      <param name="start"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.IO.Stream,System.Int32)">
      <param name="source"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Byte*,System.Int32)">
      <param name="buffer"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Collections.Immutable.ImmutableArray{System.Byte},System.Int32,System.Int32)">
      <param name="buffer"></param>
      <param name="start"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Reflection.Metadata.BlobBuilder)">
      <param name="source"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="buffer"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Byte[])">
      <param name="buffer"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteBytes(System.Byte,System.Int32)">
      <param name="value"></param>
      <param name="byteCount"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteCompressedInteger(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteCompressedSignedInteger(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteConstant(System.Object)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteDateTime(System.DateTime)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteDecimal(System.Decimal)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteDouble(System.Double)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteGuid(System.Guid)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteInt16(System.Int16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteInt16BE(System.Int16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteInt32(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteInt32BE(System.Int32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteInt64(System.Int64)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteReference(System.Int32,System.Boolean)">
      <param name="reference"></param>
      <param name="isSmall"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteSByte(System.SByte)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteSerializedString(System.String)">
      <param name="str"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteSingle(System.Single)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUInt16(System.UInt16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUInt16BE(System.UInt16)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUInt32(System.UInt32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUInt32BE(System.UInt32)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUInt64(System.UInt64)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUserString(System.String)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUTF16(System.Char[])">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUTF16(System.String)">
      <param name="value"></param>
    </member>
    <member name="M:System.Reflection.Metadata.BlobWriter.WriteUTF8(System.String,System.Boolean)">
      <param name="value"></param>
      <param name="allowUnpairedSurrogates"></param>
    </member>
    <member name="T:System.Reflection.Metadata.Constant">
      
    </member>
    <member name="P:System.Reflection.Metadata.Constant.Parent">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Constant.TypeCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Constant.Value">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ConstantHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.Equals(System.Reflection.Metadata.ConstantHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ConstantHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.op_Equality(System.Reflection.Metadata.ConstantHandle,System.Reflection.Metadata.ConstantHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ConstantHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ConstantHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.op_Implicit(System.Reflection.Metadata.ConstantHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.op_Implicit(System.Reflection.Metadata.ConstantHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ConstantHandle.op_Inequality(System.Reflection.Metadata.ConstantHandle,System.Reflection.Metadata.ConstantHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ConstantTypeCode">
      
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Boolean">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Byte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Char">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Double">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Int16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Int32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Int64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Invalid">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.NullReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.SByte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.Single">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.UInt16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.UInt32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ConstantTypeCode.UInt64">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SignatureHeader">
      
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)">
      <param name="rawValue"></param>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.#ctor(System.Reflection.Metadata.SignatureKind,System.Reflection.Metadata.SignatureCallingConvention,System.Reflection.Metadata.SignatureAttributes)">
      <param name="kind"></param>
      <param name="convention"></param>
      <param name="attributes"></param>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.Attributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.CallingConvention">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.HasExplicitThis">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.IsGeneric">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.IsInstance">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.Kind">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SignatureHeader.RawValue">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SignatureHeader.ToString">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SignatureKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.SignatureKind.Field">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureKind.LocalVariables">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureKind.Method">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureKind.MethodSpecification">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureKind.Property">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SignatureTypeCode">
      
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Array">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Boolean">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.ByReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Byte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Char">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Double">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.FunctionPointer">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.GenericMethodParameter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.GenericTypeInstance">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.GenericTypeParameter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Int16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Int32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Int64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.IntPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Invalid">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Object">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.OptionalModifier">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Pinned">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Pointer">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.RequiredModifier">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.SByte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Sentinel">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Single">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.SZArray">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.TypedReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.TypeHandle">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.UInt16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.UInt32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.UInt64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.UIntPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeCode.Void">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SignatureTypeKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeKind.Class">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeKind.Unknown">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureTypeKind.ValueType">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.StandaloneSignature">
      
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignature.DecodeLocalSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignature.DecodeLocalSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignature.DecodeMethodSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignature.DecodeMethodSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignature.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignature.GetKind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.StandaloneSignature.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.StandaloneSignatureHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.Equals(System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.StandaloneSignatureHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.op_Equality(System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.op_Implicit(System.Reflection.Metadata.StandaloneSignatureHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.op_Implicit(System.Reflection.Metadata.StandaloneSignatureHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StandaloneSignatureHandle.op_Inequality(System.Reflection.Metadata.StandaloneSignatureHandle,System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.StandaloneSignatureKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.StandaloneSignatureKind.LocalVariables">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.StandaloneSignatureKind.Method">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.StringHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.Equals(System.Reflection.Metadata.StringHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.StringHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.op_Equality(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.StringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.op_Implicit(System.Reflection.Metadata.StringHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.StringHandle.op_Inequality(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinition.Attributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinition.BaseType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetDeclarativeSecurityAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetDeclaringType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetEvents">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetFields">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetGenericParameters">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetInterfaceImplementations">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetLayout">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetMethodImplementations">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetMethods">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetNestedTypes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinition.GetProperties">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinition.Namespace">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinition.NamespaceDefinition">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.Equals(System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.op_Equality(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.op_Implicit(System.Reflection.Metadata.TypeDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.op_Implicit(System.Reflection.Metadata.TypeDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandle.op_Inequality(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.TypeDefinitionHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.TypeDefinitionHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#TypeDefinitionHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeDefinitionHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeLayout">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeLayout.#ctor(System.Int32,System.Int32)">
      <param name="size"></param>
      <param name="packingSize"></param>
    </member>
    <member name="P:System.Reflection.Metadata.TypeLayout.IsDefault">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeLayout.PackingSize">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeLayout.Size">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeReference">
      
    </member>
    <member name="P:System.Reflection.Metadata.TypeReference.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeReference.Namespace">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeReference.ResolutionScope">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeReferenceHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.Equals(System.Reflection.Metadata.TypeReferenceHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeReferenceHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.op_Equality(System.Reflection.Metadata.TypeReferenceHandle,System.Reflection.Metadata.TypeReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.TypeReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.TypeReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.op_Implicit(System.Reflection.Metadata.TypeReferenceHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.op_Implicit(System.Reflection.Metadata.TypeReferenceHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandle.op_Inequality(System.Reflection.Metadata.TypeReferenceHandle,System.Reflection.Metadata.TypeReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.TypeReferenceHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.TypeReferenceHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#TypeReferenceHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeReferenceHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeSpecification">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecification.DecodeSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecification.DecodeSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecification.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeSpecification.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.TypeSpecificationHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.Equals(System.Reflection.Metadata.TypeSpecificationHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.TypeSpecificationHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.op_Equality(System.Reflection.Metadata.TypeSpecificationHandle,System.Reflection.Metadata.TypeSpecificationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.TypeSpecificationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.TypeSpecificationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.op_Implicit(System.Reflection.Metadata.TypeSpecificationHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.op_Implicit(System.Reflection.Metadata.TypeSpecificationHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.TypeSpecificationHandle.op_Inequality(System.Reflection.Metadata.TypeSpecificationHandle,System.Reflection.Metadata.TypeSpecificationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.UserStringHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.Equals(System.Reflection.Metadata.UserStringHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.UserStringHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.op_Equality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.UserStringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.op_Implicit(System.Reflection.Metadata.UserStringHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.UserStringHandle.op_Inequality(System.Reflection.Metadata.UserStringHandle,System.Reflection.Metadata.UserStringHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.MethodImportAttributes">
      
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.BestFitMappingDisable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.BestFitMappingEnable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.BestFitMappingMask">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CallingConventionCDecl">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CallingConventionFastCall">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CallingConventionMask">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CallingConventionStdCall">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CallingConventionThisCall">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CallingConventionWinApi">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CharSetAnsi">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CharSetAuto">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CharSetMask">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.CharSetUnicode">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.ExactSpelling">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.None">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.SetLastError">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.ThrowOnUnmappableCharDisable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.ThrowOnUnmappableCharEnable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodImportAttributes.ThrowOnUnmappableCharMask">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.MethodSemanticsAttributes">
      
    </member>
    <member name="F:System.Reflection.MethodSemanticsAttributes.Adder">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodSemanticsAttributes.Getter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodSemanticsAttributes.Other">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodSemanticsAttributes.Raiser">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodSemanticsAttributes.Remover">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.MethodSemanticsAttributes.Setter">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.Characteristics">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.AggressiveWSTrim">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.Bit32Machine">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.BytesReversedHi">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.BytesReversedLo">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.DebugStripped">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.Dll">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.ExecutableImage">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.LargeAddressAware">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.LineNumsStripped">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.LocalSymsStripped">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.NetRunFromSwap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.RelocsStripped">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.RemovableRunFromSwap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.System">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Characteristics.UpSystemOnly">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.CodeViewDebugDirectoryData">
      
    </member>
    <member name="P:System.Reflection.PortableExecutable.CodeViewDebugDirectoryData.Age">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CodeViewDebugDirectoryData.Guid">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CodeViewDebugDirectoryData.Path">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.CoffHeader">
      
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.Characteristics">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.Machine">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.NumberOfSections">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.NumberOfSymbols">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.PointerToSymbolTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.SizeOfOptionalHeader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CoffHeader.TimeDateStamp">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.CorFlags">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.ILLibrary">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.ILOnly">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.NativeEntryPoint">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.Prefers32Bit">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.Requires32Bit">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.StrongNameSigned">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.CorFlags.TrackDebugData">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.CorHeader">
      
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.CodeManagerTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.EntryPointTokenOrRelativeVirtualAddress">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.ExportAddressTableJumpsDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.Flags">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.MajorRuntimeVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.ManagedNativeHeaderDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.MetadataDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.MinorRuntimeVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.ResourcesDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.StrongNameSignatureDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.CorHeader.VtableFixupsDirectory">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.DebugDirectoryBuilder">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.DebugDirectoryBuilder.#ctor">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.DebugDirectoryBuilder.AddCodeViewEntry(System.String,System.Reflection.Metadata.BlobContentId,System.UInt16)">
      <param name="pdbPath"></param>
      <param name="pdbContentId"></param>
      <param name="portablePdbVersion"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.DebugDirectoryBuilder.AddEmbeddedPortablePdbEntry(System.Reflection.Metadata.BlobBuilder,System.UInt16)">
      <param name="debugMetadata"></param>
      <param name="portablePdbVersion"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.DebugDirectoryBuilder.AddReproducibleEntry">
      
    </member>
    <member name="T:System.Reflection.PortableExecutable.DebugDirectoryEntry">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.DebugDirectoryEntry.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Reflection.PortableExecutable.DebugDirectoryEntryType,System.Int32,System.Int32,System.Int32)">
      <param name="stamp"></param>
      <param name="majorVersion"></param>
      <param name="minorVersion"></param>
      <param name="type"></param>
      <param name="dataSize"></param>
      <param name="dataRelativeVirtualAddress"></param>
      <param name="dataPointer"></param>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.DataPointer">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.DataRelativeVirtualAddress">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.DataSize">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.IsPortableCodeView">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.MajorVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.MinorVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.Stamp">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.DebugDirectoryEntry.Type">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.DebugDirectoryEntryType">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.CodeView">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Coff">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.EmbeddedPortablePdb">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Reproducible">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DebugDirectoryEntryType.Unknown">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.DirectoryEntry">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.DirectoryEntry.#ctor(System.Int32,System.Int32)">
      <param name="relativeVirtualAddress"></param>
      <param name="size"></param>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DirectoryEntry.RelativeVirtualAddress">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DirectoryEntry.Size">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.DllCharacteristics">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.AppContainer">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.DynamicBase">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.HighEntropyVirtualAddressSpace">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.NoBind">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.NoIsolation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.NoSeh">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.NxCompatible">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.ProcessInit">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.ProcessTerm">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.TerminalServerAware">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.ThreadInit">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.ThreadTerm">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.DllCharacteristics.WdmDriver">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.Machine">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Alpha">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Alpha64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.AM33">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Amd64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Arm">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.ArmThumb2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Ebc">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.I386">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.IA64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.M32R">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.MIPS16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.MipsFpu">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.MipsFpu16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.PowerPC">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.PowerPCFP">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.SH3">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.SH3Dsp">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.SH3E">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.SH4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.SH5">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Thumb">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Tricore">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.Unknown">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Machine.WceMipsV2">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.ManagedPEBuilder">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.ManagedPEBuilder.#ctor(System.Reflection.PortableExecutable.PEHeaderBuilder,System.Reflection.Metadata.Ecma335.MetadataRootBuilder,System.Reflection.Metadata.BlobBuilder,System.Reflection.Metadata.BlobBuilder,System.Reflection.Metadata.BlobBuilder,System.Reflection.PortableExecutable.ResourceSectionBuilder,System.Reflection.PortableExecutable.DebugDirectoryBuilder,System.Int32,System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.PortableExecutable.CorFlags,System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Blob},System.Reflection.Metadata.BlobContentId})">
      <param name="header"></param>
      <param name="metadataRootBuilder"></param>
      <param name="ilStream"></param>
      <param name="mappedFieldData"></param>
      <param name="managedResources"></param>
      <param name="nativeResources"></param>
      <param name="debugDirectoryBuilder"></param>
      <param name="strongNameSignatureSize"></param>
      <param name="entryPoint"></param>
      <param name="flags"></param>
      <param name="deterministicIdProvider"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.ManagedPEBuilder.CreateSections">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.ManagedPEBuilder.GetDirectories">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.ManagedPEBuilder.ManagedResourcesDataAlignment">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.ManagedPEBuilder.MappedFieldDataAlignment">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.ManagedPEBuilder.SerializeSection(System.String,System.Reflection.PortableExecutable.SectionLocation)">
      <param name="name"></param>
      <param name="location"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.ManagedPEBuilder.Sign(System.Reflection.Metadata.BlobBuilder,System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Blob},System.Byte[]})">
      <param name="peImage"></param>
      <param name="signatureProvider"></param>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEBuilder.Section">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.Section.#ctor(System.String,System.Reflection.PortableExecutable.SectionCharacteristics)">
      <param name="name"></param>
      <param name="characteristics"></param>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEBuilder.Section.Characteristics">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEBuilder.Section.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEBuilder">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.#ctor(System.Reflection.PortableExecutable.PEHeaderBuilder,System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Blob},System.Reflection.Metadata.BlobContentId})">
      <param name="header"></param>
      <param name="deterministicIdProvider"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.CreateSections">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.GetDirectories">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.GetSections">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEBuilder.Header">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEBuilder.IdProvider">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEBuilder.IsDeterministic">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.Serialize(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEBuilder.SerializeSection(System.String,System.Reflection.PortableExecutable.SectionLocation)">
      <param name="name"></param>
      <param name="location"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEDirectoriesBuilder">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEDirectoriesBuilder.#ctor">
      
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.AddressOfEntryPoint">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.BaseRelocationTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.BoundImportTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.CopyrightTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.CorHeaderTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.DebugTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.DelayImportTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.ExceptionTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.ExportTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.GlobalPointerTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.ImportAddressTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.ImportTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.LoadConfigTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.ResourceTable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEDirectoriesBuilder.ThreadLocalStorageTable">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEHeader">
      
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.AddressOfEntryPoint">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.BaseOfCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.BaseOfData">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.BaseRelocationTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.BoundImportTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.CertificateTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.CheckSum">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.CopyrightTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.CorHeaderTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.DebugTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.DelayImportTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.DllCharacteristics">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ExceptionTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ExportTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.FileAlignment">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.GlobalPointerTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ImageBase">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ImportAddressTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ImportTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.LoadConfigTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.Magic">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MajorImageVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MajorLinkerVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MajorOperatingSystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MajorSubsystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MinorImageVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MinorLinkerVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MinorOperatingSystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.MinorSubsystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.NumberOfRvaAndSizes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ResourceTableDirectory">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SectionAlignment">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfHeaders">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfHeapCommit">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfHeapReserve">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfImage">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfInitializedData">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfStackCommit">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfStackReserve">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.SizeOfUninitializedData">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.Subsystem">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeader.ThreadLocalStorageTableDirectory">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEHeaderBuilder">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaderBuilder.#ctor(System.Reflection.PortableExecutable.Machine,System.Int32,System.Int32,System.UInt64,System.Byte,System.Byte,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Reflection.PortableExecutable.Subsystem,System.Reflection.PortableExecutable.DllCharacteristics,System.Reflection.PortableExecutable.Characteristics,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
      <param name="machine"></param>
      <param name="sectionAlignment"></param>
      <param name="fileAlignment"></param>
      <param name="imageBase"></param>
      <param name="majorLinkerVersion"></param>
      <param name="minorLinkerVersion"></param>
      <param name="majorOperatingSystemVersion"></param>
      <param name="minorOperatingSystemVersion"></param>
      <param name="majorImageVersion"></param>
      <param name="minorImageVersion"></param>
      <param name="majorSubsystemVersion"></param>
      <param name="minorSubsystemVersion"></param>
      <param name="subsystem"></param>
      <param name="dllCharacteristics"></param>
      <param name="imageCharacteristics"></param>
      <param name="sizeOfStackReserve"></param>
      <param name="sizeOfStackCommit"></param>
      <param name="sizeOfHeapReserve"></param>
      <param name="sizeOfHeapCommit"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaderBuilder.CreateExecutableHeader">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaderBuilder.CreateLibraryHeader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.DllCharacteristics">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.FileAlignment">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.ImageBase">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.ImageCharacteristics">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.Machine">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MajorImageVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MajorLinkerVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MajorOperatingSystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MajorSubsystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MinorImageVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MinorLinkerVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MinorOperatingSystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.MinorSubsystemVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.SectionAlignment">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.SizeOfHeapCommit">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.SizeOfHeapReserve">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.SizeOfStackCommit">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.SizeOfStackReserve">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaderBuilder.Subsystem">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEHeaders">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream)">
      <param name="peStream"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32)">
      <param name="peStream"></param>
      <param name="size"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaders.#ctor(System.IO.Stream,System.Int32,System.Boolean)">
      <param name="peStream"></param>
      <param name="size"></param>
      <param name="isLoadedImage"></param>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.CoffHeader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.CoffHeaderStartOffset">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.CorHeader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.CorHeaderStartOffset">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaders.GetContainingSectionIndex(System.Int32)">
      <param name="relativeVirtualAddress"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.IsCoffOnly">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.IsConsoleApplication">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.IsDll">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.IsExe">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.MetadataSize">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.MetadataStartOffset">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.PEHeader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.PEHeaderStartOffset">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEHeaders.SectionHeaders">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEHeaders.TryGetDirectoryOffset(System.Reflection.PortableExecutable.DirectoryEntry,System.Int32@)">
      <param name="directory"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEMagic">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEMagic.PE32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEMagic.PE32Plus">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEMemoryBlock">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEMemoryBlock.GetContent">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEMemoryBlock.GetContent(System.Int32,System.Int32)">
      <param name="start"></param>
      <param name="length"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEMemoryBlock.GetReader">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEMemoryBlock.GetReader(System.Int32,System.Int32)">
      <param name="start"></param>
      <param name="length"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEMemoryBlock.Length">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEMemoryBlock.Pointer">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEReader">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="peImage"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.#ctor(System.IO.Stream)">
      <param name="peStream"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.#ctor(System.Byte*,System.Int32)">
      <param name="peImage"></param>
      <param name="size"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.#ctor(System.IO.Stream,System.Reflection.PortableExecutable.PEStreamOptions)">
      <param name="peStream"></param>
      <param name="options"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.#ctor(System.Byte*,System.Int32,System.Boolean)">
      <param name="peImage"></param>
      <param name="size"></param>
      <param name="isLoadedImage"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.#ctor(System.IO.Stream,System.Reflection.PortableExecutable.PEStreamOptions,System.Int32)">
      <param name="peStream"></param>
      <param name="options"></param>
      <param name="size"></param>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.Dispose">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.GetEntireImage">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.GetMetadata">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.GetSectionData(System.String)">
      <param name="sectionName"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.GetSectionData(System.Int32)">
      <param name="relativeVirtualAddress"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEReader.HasMetadata">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEReader.IsEntireImageAvailable">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEReader.IsLoadedImage">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.PEReader.PEHeaders">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.ReadCodeViewDebugDirectoryData(System.Reflection.PortableExecutable.DebugDirectoryEntry)">
      <param name="entry"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.ReadDebugDirectory">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.ReadEmbeddedPortablePdbDebugDirectoryData(System.Reflection.PortableExecutable.DebugDirectoryEntry)">
      <param name="entry"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.PortableExecutable.PEReader.TryOpenAssociatedPortablePdb(System.String,System.Func{System.String,System.IO.Stream},System.Reflection.Metadata.MetadataReaderProvider@,System.String@)">
      <param name="peImagePath"></param>
      <param name="pdbFileStreamProvider"></param>
      <param name="pdbReaderProvider"></param>
      <param name="pdbPath"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.PEStreamOptions">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEStreamOptions.Default">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEStreamOptions.IsLoadedImage">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEStreamOptions.LeaveOpen">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEStreamOptions.PrefetchEntireImage">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.PEStreamOptions.PrefetchMetadata">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.ResourceSectionBuilder">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.ResourceSectionBuilder.#ctor">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.ResourceSectionBuilder.Serialize(System.Reflection.Metadata.BlobBuilder,System.Reflection.PortableExecutable.SectionLocation)">
      <param name="builder"></param>
      <param name="location"></param>
    </member>
    <member name="T:System.Reflection.PortableExecutable.SectionCharacteristics">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align1024Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align128Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align16Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align1Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align2048Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align256Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align2Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align32Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align4096Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align4Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align512Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align64Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align8192Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Align8Bytes">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.AlignMask">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.ContainsCode">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.ContainsInitializedData">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.ContainsUninitializedData">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.GPRel">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.LinkerComdat">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.LinkerInfo">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.LinkerNRelocOvfl">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.LinkerOther">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.LinkerRemove">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.Mem16Bit">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemDiscardable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemExecute">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemFardata">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemLocked">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemNotCached">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemNotPaged">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemPreload">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemProtected">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemPurgeable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemRead">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemShared">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemSysheap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.MemWrite">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.NoDeferSpecExc">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeCopy">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeDSect">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeGroup">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeNoLoad">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeNoPad">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeOver">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.SectionCharacteristics.TypeReg">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.SectionHeader">
      
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.NumberOfLineNumbers">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.NumberOfRelocations">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.PointerToLineNumbers">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.PointerToRawData">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.PointerToRelocations">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.SectionCharacteristics">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.SizeOfRawData">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.VirtualAddress">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionHeader.VirtualSize">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.SectionLocation">
      
    </member>
    <member name="M:System.Reflection.PortableExecutable.SectionLocation.#ctor(System.Int32,System.Int32)">
      <param name="relativeVirtualAddress"></param>
      <param name="pointerToRawData"></param>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionLocation.PointerToRawData">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.PortableExecutable.SectionLocation.RelativeVirtualAddress">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.PortableExecutable.Subsystem">
      
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.EfiApplication">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.EfiBootServiceDriver">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.EfiRom">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.EfiRuntimeDriver">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.Native">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.NativeWindows">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.OS2Cui">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.PosixCui">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.Unknown">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.WindowsBootApplication">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.WindowsCEGui">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.WindowsCui">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.WindowsGui">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.PortableExecutable.Subsystem.Xbox">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.SignatureDecoder`2">
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureDecoder`2.#ctor(System.Reflection.Metadata.ISignatureTypeProvider{`0,`1},System.Reflection.Metadata.MetadataReader,`1)">
      <param name="provider"></param>
      <param name="metadataReader"></param>
      <param name="genericContext"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureDecoder`2.DecodeFieldSignature(System.Reflection.Metadata.BlobReader@)">
      <param name="blobReader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureDecoder`2.DecodeLocalSignature(System.Reflection.Metadata.BlobReader@)">
      <param name="blobReader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureDecoder`2.DecodeMethodSignature(System.Reflection.Metadata.BlobReader@)">
      <param name="blobReader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureDecoder`2.DecodeMethodSpecificationSignature(System.Reflection.Metadata.BlobReader@)">
      <param name="blobReader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureDecoder`2.DecodeType(System.Reflection.Metadata.BlobReader@,System.Boolean)">
      <param name="blobReader"></param>
      <param name="allowTypeSpecifications"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Array(System.Action{System.Reflection.Metadata.Ecma335.SignatureTypeEncoder},System.Action{System.Reflection.Metadata.Ecma335.ArrayShapeEncoder})">
      <param name="elementType"></param>
      <param name="arrayShape"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Array(System.Reflection.Metadata.Ecma335.SignatureTypeEncoder@,System.Reflection.Metadata.Ecma335.ArrayShapeEncoder@)">
      <param name="elementType"></param>
      <param name="arrayShape"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Boolean">
      
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Byte">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Char">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.CustomModifiers">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Double">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.FunctionPointer(System.Reflection.Metadata.SignatureCallingConvention,System.Reflection.Metadata.Ecma335.FunctionPointerAttributes,System.Int32)">
      <param name="convention"></param>
      <param name="attributes"></param>
      <param name="genericParameterCount"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.GenericInstantiation(System.Reflection.Metadata.EntityHandle,System.Int32,System.Boolean)">
      <param name="genericType"></param>
      <param name="genericArgumentCount"></param>
      <param name="isValueType"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.GenericMethodTypeParameter(System.Int32)">
      <param name="parameterIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.GenericTypeParameter(System.Int32)">
      <param name="parameterIndex"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Int16">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Int32">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Int64">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.IntPtr">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Object">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Pointer">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.PrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)">
      <param name="type"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.SByte">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Single">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.String">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.SZArray">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.Type(System.Reflection.Metadata.EntityHandle,System.Boolean)">
      <param name="type"></param>
      <param name="isValueType"></param>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.UInt16">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.UInt32">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.UInt64">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.UIntPtr">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.SignatureTypeEncoder.VoidPointer">
      
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.TableIndex">
      
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Assembly">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.AssemblyOS">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.AssemblyProcessor">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.AssemblyRef">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.AssemblyRefOS">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.AssemblyRefProcessor">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ClassLayout">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Constant">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.CustomAttribute">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.CustomDebugInformation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.DeclSecurity">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Document">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.EncLog">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.EncMap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Event">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.EventMap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.EventPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ExportedType">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Field">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.FieldLayout">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.FieldMarshal">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.FieldPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.FieldRva">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.File">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.GenericParam">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.GenericParamConstraint">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ImplMap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ImportScope">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.InterfaceImpl">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.LocalConstant">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.LocalScope">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.LocalVariable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ManifestResource">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MemberRef">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MethodDebugInformation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MethodDef">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MethodImpl">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MethodPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MethodSemantics">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.MethodSpec">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Module">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ModuleRef">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.NestedClass">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Param">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.ParamPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.Property">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.PropertyMap">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.PropertyPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.StandAloneSig">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.StateMachineMethod">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.TypeDef">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.TypeRef">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Ecma335.TableIndex.TypeSpec">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Ecma335.VectorEncoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.VectorEncoder.#ctor(System.Reflection.Metadata.BlobBuilder)">
      <param name="builder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.Ecma335.VectorEncoder.Builder">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Ecma335.VectorEncoder.Count(System.Int32)">
      <param name="count"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.EntityHandle">
      
    </member>
    <member name="F:System.Reflection.Metadata.EntityHandle.AssemblyDefinition">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.Equals(System.Reflection.Metadata.EntityHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EntityHandle.IsNil">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EntityHandle.Kind">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.EntityHandle.ModuleDefinition">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.op_Equality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.op_Implicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EntityHandle.op_Inequality(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.EventAccessors">
      
    </member>
    <member name="P:System.Reflection.Metadata.EventAccessors.Adder">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EventAccessors.Raiser">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EventAccessors.Remover">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.EventDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinition.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinition.GetAccessors">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinition.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinition.Type">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.EventDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.Equals(System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.op_Equality(System.Reflection.Metadata.EventDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.op_Implicit(System.Reflection.Metadata.EventDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.op_Implicit(System.Reflection.Metadata.EventDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandle.op_Inequality(System.Reflection.Metadata.EventDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.EventDefinitionHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.EventDefinitionHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#EventDefinitionHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.EventDefinitionHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ExceptionRegion">
      
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.CatchType">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.FilterOffset">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.HandlerLength">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.HandlerOffset">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.Kind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.TryLength">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExceptionRegion.TryOffset">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ExceptionRegionKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.ExceptionRegionKind.Catch">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ExceptionRegionKind.Fault">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ExceptionRegionKind.Filter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ExceptionRegionKind.Finally">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ExportedType">
      
    </member>
    <member name="P:System.Reflection.Metadata.ExportedType.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedType.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedType.Implementation">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedType.IsForwarder">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedType.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedType.Namespace">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedType.NamespaceDefinition">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ExportedTypeHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.Equals(System.Reflection.Metadata.ExportedTypeHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedTypeHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.op_Equality(System.Reflection.Metadata.ExportedTypeHandle,System.Reflection.Metadata.ExportedTypeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ExportedTypeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ExportedTypeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.op_Implicit(System.Reflection.Metadata.ExportedTypeHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.op_Implicit(System.Reflection.Metadata.ExportedTypeHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandle.op_Inequality(System.Reflection.Metadata.ExportedTypeHandle,System.Reflection.Metadata.ExportedTypeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.ExportedTypeHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.ExportedTypeHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ExportedTypeHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ExportedTypeHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.FieldDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinition.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.DecodeSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.DecodeSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.GetDeclaringType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.GetDefaultValue">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.GetMarshallingDescriptor">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.GetOffset">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinition.GetRelativeVirtualAddress">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinition.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.FieldDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.Equals(System.Reflection.Metadata.FieldDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.op_Equality(System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.FieldDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.FieldDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.FieldDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.op_Implicit(System.Reflection.Metadata.FieldDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.op_Implicit(System.Reflection.Metadata.FieldDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandle.op_Inequality(System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.FieldDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.FieldDefinitionHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.FieldDefinitionHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#FieldDefinitionHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.FieldDefinitionHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameter">
      
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameter.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameter.GetConstraints">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameter.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameter.Index">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameter.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameter.Parent">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterConstraint">
      
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraint.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraint.Parameter">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraint.Type">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterConstraintHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.Equals(System.Reflection.Metadata.GenericParameterConstraintHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraintHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.op_Equality(System.Reflection.Metadata.GenericParameterConstraintHandle,System.Reflection.Metadata.GenericParameterConstraintHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.GenericParameterConstraintHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.GenericParameterConstraintHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.op_Implicit(System.Reflection.Metadata.GenericParameterConstraintHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.op_Implicit(System.Reflection.Metadata.GenericParameterConstraintHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandle.op_Inequality(System.Reflection.Metadata.GenericParameterConstraintHandle,System.Reflection.Metadata.GenericParameterConstraintHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterConstraintHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.Item(System.Int32)">
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#GenericParameterConstraintHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterConstraintHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.Equals(System.Reflection.Metadata.GenericParameterHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.op_Equality(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.GenericParameterHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.GenericParameterHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.GenericParameterHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.op_Implicit(System.Reflection.Metadata.GenericParameterHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.op_Implicit(System.Reflection.Metadata.GenericParameterHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandle.op_Inequality(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.GenericParameterHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.GenericParameterHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GenericParameterHandleCollection.Item(System.Int32)">
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#GenericParameterHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GenericParameterHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.GuidHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.Equals(System.Reflection.Metadata.GuidHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.GuidHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.op_Equality(System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.GuidHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.op_Implicit(System.Reflection.Metadata.GuidHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.GuidHandle.op_Inequality(System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Handle">
      
    </member>
    <member name="F:System.Reflection.Metadata.Handle.AssemblyDefinition">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Handle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Handle.Equals(System.Reflection.Metadata.Handle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Handle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Handle.IsNil">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Handle.Kind">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.Handle.ModuleDefinition">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Handle.op_Equality(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Handle.op_Inequality(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.HandleComparer">
      
    </member>
    <member name="M:System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)">
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.HandleComparer.Default">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)">
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)">
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.HandleKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.AssemblyDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.AssemblyFile">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.AssemblyReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.Blob">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.Constant">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.CustomAttribute">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.CustomDebugInformation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.DeclarativeSecurityAttribute">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.Document">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.EventDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.ExportedType">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.FieldDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.GenericParameter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.GenericParameterConstraint">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.Guid">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.ImportScope">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.InterfaceImplementation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.LocalConstant">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.LocalScope">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.LocalVariable">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.ManifestResource">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.MemberReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.MethodDebugInformation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.MethodDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.MethodImplementation">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.MethodSpecification">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.ModuleDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.ModuleReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.NamespaceDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.Parameter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.PropertyDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.StandaloneSignature">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.TypeDefinition">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.TypeReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.TypeSpecification">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.HandleKind.UserString">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.IConstructedTypeProvider`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetArrayType(`0,System.Reflection.Metadata.ArrayShape)">
      <param name="elementType"></param>
      <param name="shape"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetByReferenceType(`0)">
      <param name="elementType"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstance(`0,System.Collections.Immutable.ImmutableArray{`0})">
      <param name="genericType"></param>
      <param name="typeArguments"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetGenericInstantiation(`0,System.Collections.Immutable.ImmutableArray{`0})">
      <param name="genericType"></param>
      <param name="typeArguments"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.IConstructedTypeProvider`1.GetPointerType(`0)">
      <param name="elementType"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ICustomAttributeTypeProvider`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.ICustomAttributeTypeProvider`1.GetSystemType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ICustomAttributeTypeProvider`1.GetTypeFromSerializedName(System.String)">
      <param name="name"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ICustomAttributeTypeProvider`1.GetUnderlyingEnumType(`0)">
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ICustomAttributeTypeProvider`1.IsSystemType(`0)">
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ILOpCode">
      
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Add">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Add_ovf">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Add_ovf_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.And">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Arglist">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Beq">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Beq_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bge">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bge_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bge_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bge_un_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bgt">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bgt_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bgt_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bgt_un_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ble">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ble_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ble_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ble_un_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Blt">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Blt_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Blt_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Blt_un_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bne_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Bne_un_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Box">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Br">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Br_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Break">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Brfalse">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Brfalse_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Brtrue">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Brtrue_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Call">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Calli">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Callvirt">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Castclass">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ceq">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Cgt">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Cgt_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ckfinite">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Clt">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Clt_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Constrained">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_i">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_i1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_i2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i1_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i2_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i4_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_i8_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u1_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u2_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u4_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_ovf_u8_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_r_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_r4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_r8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_u">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_u1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_u2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_u4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Conv_u8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Cpblk">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Cpobj">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Div">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Div_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Dup">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Endfilter">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Endfinally">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Initblk">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Initobj">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Isinst">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Jmp">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarg">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarg_0">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarg_1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarg_2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarg_3">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarg_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarga">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldarga_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_0">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_3">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_5">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_6">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_7">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_m1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i4_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_r4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldc_r8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_i">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_i1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_i2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_r4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_r8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_ref">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_u1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_u2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelem_u4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldelema">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldfld">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldflda">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldftn">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_i">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_i1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_i2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_r4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_r8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_ref">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_u1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_u2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldind_u4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldlen">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloc">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloc_0">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloc_1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloc_2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloc_3">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloc_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloca">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldloca_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldnull">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldobj">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldsfld">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldsflda">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldstr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldtoken">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ldvirtftn">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Leave">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Leave_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Localloc">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Mkrefany">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Mul">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Mul_ovf">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Mul_ovf_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Neg">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Newarr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Newobj">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Nop">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Not">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Or">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Pop">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Readonly">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Refanytype">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Refanyval">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Rem">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Rem_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Ret">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Rethrow">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Shl">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Shr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Shr_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Sizeof">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Starg">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Starg_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_i">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_i1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_i2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_r4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_r8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stelem_ref">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stfld">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_i">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_i1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_i2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_i4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_i8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_r4">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_r8">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stind_ref">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stloc">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stloc_0">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stloc_1">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stloc_2">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stloc_3">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stloc_s">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stobj">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Stsfld">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Sub">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Sub_ovf">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Sub_ovf_un">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Switch">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Tail">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Throw">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Unaligned">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Unbox">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Unbox_any">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Volatile">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ILOpCode.Xor">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ILOpCodeExtensions">
      
    </member>
    <member name="M:System.Reflection.Metadata.ILOpCodeExtensions.GetBranchOperandSize(System.Reflection.Metadata.ILOpCode)">
      <param name="opCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ILOpCodeExtensions.GetLongBranch(System.Reflection.Metadata.ILOpCode)">
      <param name="opCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ILOpCodeExtensions.GetShortBranch(System.Reflection.Metadata.ILOpCode)">
      <param name="opCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ILOpCodeExtensions.IsBranch(System.Reflection.Metadata.ILOpCode)">
      <param name="opCode"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ImageFormatLimitationException">
      
    </member>
    <member name="M:System.Reflection.Metadata.ImageFormatLimitationException.#ctor">
      
    </member>
    <member name="M:System.Reflection.Metadata.ImageFormatLimitationException.#ctor(System.String)">
      <param name="message"></param>
    </member>
    <member name="M:System.Reflection.Metadata.ImageFormatLimitationException.#ctor(System.String,System.Exception)">
      <param name="message"></param>
      <param name="innerException"></param>
    </member>
    <member name="T:System.Reflection.Metadata.ImportDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinition.Alias">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinition.Kind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinition.TargetAssembly">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinition.TargetNamespace">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinition.TargetType">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ImportDefinitionCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinitionCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportDefinitionCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportDefinitionCollection.Enumerator.Reset">
      
    </member>
    <member name="P:System.Reflection.Metadata.ImportDefinitionCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportDefinitionCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.ImportDefinitionCollection">
      
    </member>
    <member name="M:System.Reflection.Metadata.ImportDefinitionCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportDefinitionCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ImportDefinition}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ImportDefinitionKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.AliasAssemblyNamespace">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.AliasAssemblyReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.AliasNamespace">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.AliasType">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.ImportAssemblyNamespace">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.ImportAssemblyReferenceAlias">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.ImportNamespace">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.ImportType">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.ImportDefinitionKind.ImportXmlNamespace">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ImportScope">
      
    </member>
    <member name="M:System.Reflection.Metadata.ImportScope.GetImports">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportScope.ImportsBlob">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportScope.Parent">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ImportScopeCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.ImportScopeCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportScopeCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.ImportScopeCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.ImportScopeCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ImportScopeHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ImportScopeHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.Equals(System.Reflection.Metadata.ImportScopeHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ImportScopeHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.op_Equality(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.ImportScopeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ImportScopeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ImportScopeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.op_Implicit(System.Reflection.Metadata.ImportScopeHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.op_Implicit(System.Reflection.Metadata.ImportScopeHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ImportScopeHandle.op_Inequality(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.ImportScopeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.InterfaceImplementation">
      
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementation.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.InterfaceImplementation.Interface">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.InterfaceImplementationHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.Equals(System.Reflection.Metadata.InterfaceImplementationHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.InterfaceImplementationHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.op_Equality(System.Reflection.Metadata.InterfaceImplementationHandle,System.Reflection.Metadata.InterfaceImplementationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.InterfaceImplementationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.InterfaceImplementationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.op_Implicit(System.Reflection.Metadata.InterfaceImplementationHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.op_Implicit(System.Reflection.Metadata.InterfaceImplementationHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandle.op_Inequality(System.Reflection.Metadata.InterfaceImplementationHandle,System.Reflection.Metadata.InterfaceImplementationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.InterfaceImplementationHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.InterfaceImplementationHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#InterfaceImplementationHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.InterfaceImplementationHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ISignatureTypeProvider`2">
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.ISignatureTypeProvider`2.GetFunctionPointerType(System.Reflection.Metadata.MethodSignature{`0})">
      <param name="signature"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISignatureTypeProvider`2.GetGenericMethodParameter(`1,System.Int32)">
      <param name="genericContext"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISignatureTypeProvider`2.GetGenericTypeParameter(`1,System.Int32)">
      <param name="genericContext"></param>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISignatureTypeProvider`2.GetModifiedType(`0,`0,System.Boolean)">
      <param name="modifier"></param>
      <param name="unmodifiedType"></param>
      <param name="isRequired"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISignatureTypeProvider`2.GetPinnedType(`0)">
      <param name="elementType"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISignatureTypeProvider`2.GetTypeFromSpecification(System.Reflection.Metadata.MetadataReader,`1,System.Reflection.Metadata.TypeSpecificationHandle,System.Byte)">
      <param name="reader"></param>
      <param name="genericContext"></param>
      <param name="handle"></param>
      <param name="rawTypeKind"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ISimpleTypeProvider`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetPrimitiveType(System.Reflection.Metadata.PrimitiveTypeCode)">
      <param name="typeCode"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromDefinition(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeDefinitionHandle,System.Byte)">
      <param name="reader"></param>
      <param name="handle"></param>
      <param name="rawTypeKind"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ISimpleTypeProvider`1.GetTypeFromReference(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.TypeReferenceHandle,System.Byte)">
      <param name="reader"></param>
      <param name="handle"></param>
      <param name="rawTypeKind"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ISZArrayTypeProvider`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.ISZArrayTypeProvider`1.GetSZArrayType(`0)">
      <param name="elementType"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalConstant">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalConstant.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalConstant.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalConstantHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.Equals(System.Reflection.Metadata.LocalConstantHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalConstantHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.op_Equality(System.Reflection.Metadata.LocalConstantHandle,System.Reflection.Metadata.LocalConstantHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.LocalConstantHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.LocalConstantHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.op_Implicit(System.Reflection.Metadata.LocalConstantHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.op_Implicit(System.Reflection.Metadata.LocalConstantHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandle.op_Inequality(System.Reflection.Metadata.LocalConstantHandle,System.Reflection.Metadata.LocalConstantHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.LocalConstantHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalConstantHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#LocalConstantHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalConstantHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalScope">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalScope.EndOffset">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScope.GetChildren">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScope.GetLocalConstants">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScope.GetLocalVariables">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScope.ImportScope">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScope.Length">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScope.Method">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScope.StartOffset">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalScopeHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.Equals(System.Reflection.Metadata.LocalScopeHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScopeHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.op_Equality(System.Reflection.Metadata.LocalScopeHandle,System.Reflection.Metadata.LocalScopeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.LocalScopeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.LocalScopeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.op_Implicit(System.Reflection.Metadata.LocalScopeHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.op_Implicit(System.Reflection.Metadata.LocalScopeHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandle.op_Inequality(System.Reflection.Metadata.LocalScopeHandle,System.Reflection.Metadata.LocalScopeHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.ChildrenEnumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.LocalScopeHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalScopeHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#LocalScopeHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalScopeHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalVariable">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariable.Attributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariable.Index">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariable.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalVariableAttributes">
      
    </member>
    <member name="F:System.Reflection.Metadata.LocalVariableAttributes.DebuggerHidden">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.LocalVariableAttributes.None">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalVariableHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.Equals(System.Reflection.Metadata.LocalVariableHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariableHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.op_Equality(System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalVariableHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.LocalVariableHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.LocalVariableHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.op_Implicit(System.Reflection.Metadata.LocalVariableHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.op_Implicit(System.Reflection.Metadata.LocalVariableHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandle.op_Inequality(System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalVariableHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.LocalVariableHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.LocalVariableHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#LocalVariableHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.LocalVariableHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ManifestResource">
      
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResource.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResource.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResource.Implementation">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResource.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResource.Offset">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ManifestResourceHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.Equals(System.Reflection.Metadata.ManifestResourceHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResourceHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.op_Equality(System.Reflection.Metadata.ManifestResourceHandle,System.Reflection.Metadata.ManifestResourceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ManifestResourceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ManifestResourceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.op_Implicit(System.Reflection.Metadata.ManifestResourceHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.op_Implicit(System.Reflection.Metadata.ManifestResourceHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandle.op_Inequality(System.Reflection.Metadata.ManifestResourceHandle,System.Reflection.Metadata.ManifestResourceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.ManifestResourceHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.ManifestResourceHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ManifestResourceHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ManifestResourceHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MemberReference">
      
    </member>
    <member name="M:System.Reflection.Metadata.MemberReference.DecodeFieldSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReference.DecodeFieldSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReference.DecodeMethodSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReference.DecodeMethodSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReference.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReference.GetKind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MemberReference.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MemberReference.Parent">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MemberReference.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MemberReferenceHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.Equals(System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MemberReferenceHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.op_Equality(System.Reflection.Metadata.MemberReferenceHandle,System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.op_Implicit(System.Reflection.Metadata.MemberReferenceHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.op_Implicit(System.Reflection.Metadata.MemberReferenceHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandle.op_Inequality(System.Reflection.Metadata.MemberReferenceHandle,System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.MemberReferenceHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.MemberReferenceHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#MemberReferenceHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MemberReferenceHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MemberReferenceKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.MemberReferenceKind.Field">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MemberReferenceKind.Method">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataKind">
      
    </member>
    <member name="F:System.Reflection.Metadata.MetadataKind.Ecma335">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MetadataKind.ManagedWindowsMetadata">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MetadataKind.WindowsMetadata">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataReader">
      
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.#ctor(System.Byte*,System.Int32)">
      <param name="metadata"></param>
      <param name="length"></param>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.#ctor(System.Byte*,System.Int32,System.Reflection.Metadata.MetadataReaderOptions)">
      <param name="metadata"></param>
      <param name="length"></param>
      <param name="options"></param>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.#ctor(System.Byte*,System.Int32,System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)">
      <param name="metadata"></param>
      <param name="length"></param>
      <param name="options"></param>
      <param name="utf8Decoder"></param>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.AssemblyFiles">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.AssemblyReferences">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.CustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.CustomDebugInformation">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.DebugMetadataHeader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.DeclarativeSecurityAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.Documents">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.EventDefinitions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.ExportedTypes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.FieldDefinitions">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetAssemblyDefinition">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetAssemblyFile(System.Reflection.Metadata.AssemblyFileHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetAssemblyReference(System.Reflection.Metadata.AssemblyReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetBlobBytes(System.Reflection.Metadata.BlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetBlobContent(System.Reflection.Metadata.BlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetBlobReader(System.Reflection.Metadata.StringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetBlobReader(System.Reflection.Metadata.BlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetConstant(System.Reflection.Metadata.ConstantHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetCustomAttribute(System.Reflection.Metadata.CustomAttributeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetCustomAttributes(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetCustomDebugInformation(System.Reflection.Metadata.CustomDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetCustomDebugInformation(System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetDeclarativeSecurityAttribute(System.Reflection.Metadata.DeclarativeSecurityAttributeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetDocument(System.Reflection.Metadata.DocumentHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetEventDefinition(System.Reflection.Metadata.EventDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetExportedType(System.Reflection.Metadata.ExportedTypeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetFieldDefinition(System.Reflection.Metadata.FieldDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetGenericParameter(System.Reflection.Metadata.GenericParameterHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetGenericParameterConstraint(System.Reflection.Metadata.GenericParameterConstraintHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetGuid(System.Reflection.Metadata.GuidHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetImportScope(System.Reflection.Metadata.ImportScopeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetInterfaceImplementation(System.Reflection.Metadata.InterfaceImplementationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetLocalConstant(System.Reflection.Metadata.LocalConstantHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetLocalScope(System.Reflection.Metadata.LocalScopeHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetLocalScopes(System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetLocalScopes(System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetLocalVariable(System.Reflection.Metadata.LocalVariableHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetManifestResource(System.Reflection.Metadata.ManifestResourceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetMemberReference(System.Reflection.Metadata.MemberReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetMethodDebugInformation(System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetMethodDebugInformation(System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetMethodDefinition(System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetMethodImplementation(System.Reflection.Metadata.MethodImplementationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetMethodSpecification(System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetModuleDefinition">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetModuleReference(System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetNamespaceDefinition(System.Reflection.Metadata.NamespaceDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetNamespaceDefinitionRoot">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetParameter(System.Reflection.Metadata.ParameterHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetPropertyDefinition(System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetStandaloneSignature(System.Reflection.Metadata.StandaloneSignatureHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetString(System.Reflection.Metadata.DocumentNameBlobHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetString(System.Reflection.Metadata.NamespaceDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetString(System.Reflection.Metadata.StringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetTypeDefinition(System.Reflection.Metadata.TypeDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetTypeReference(System.Reflection.Metadata.TypeReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetTypeSpecification(System.Reflection.Metadata.TypeSpecificationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReader.GetUserString(System.Reflection.Metadata.UserStringHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.ImportScopes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.IsAssembly">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.LocalConstants">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.LocalScopes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.LocalVariables">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.ManifestResources">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MemberReferences">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MetadataKind">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MetadataLength">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MetadataPointer">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MetadataVersion">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MethodDebugInformation">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.MethodDefinitions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.Options">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.PropertyDefinitions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.StringComparer">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.TypeDefinitions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.TypeReferences">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataReader.UTF8Decoder">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataReaderOptions">
      
    </member>
    <member name="F:System.Reflection.Metadata.MetadataReaderOptions.ApplyWindowsRuntimeProjections">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MetadataReaderOptions.Default">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MetadataReaderOptions.None">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataReaderProvider">
      
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.Dispose">
      
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="image"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)">
      <param name="start"></param>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)">
      <param name="stream"></param>
      <param name="options"></param>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Collections.Immutable.ImmutableArray{System.Byte})">
      <param name="image"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)">
      <param name="start"></param>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)">
      <param name="stream"></param>
      <param name="options"></param>
      <param name="size"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataReaderProvider.GetMetadataReader(System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)">
      <param name="options"></param>
      <param name="utf8Decoder"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataStreamOptions">
      
    </member>
    <member name="F:System.Reflection.Metadata.MetadataStreamOptions.Default">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataStringComparer">
      
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.Equals(System.Reflection.Metadata.DocumentNameBlobHandle,System.String)">
      <param name="handle"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.Equals(System.Reflection.Metadata.NamespaceDefinitionHandle,System.String)">
      <param name="handle"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.Equals(System.Reflection.Metadata.StringHandle,System.String)">
      <param name="handle"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.Equals(System.Reflection.Metadata.DocumentNameBlobHandle,System.String,System.Boolean)">
      <param name="handle"></param>
      <param name="value"></param>
      <param name="ignoreCase"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.Equals(System.Reflection.Metadata.NamespaceDefinitionHandle,System.String,System.Boolean)">
      <param name="handle"></param>
      <param name="value"></param>
      <param name="ignoreCase"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.Equals(System.Reflection.Metadata.StringHandle,System.String,System.Boolean)">
      <param name="handle"></param>
      <param name="value"></param>
      <param name="ignoreCase"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.StartsWith(System.Reflection.Metadata.StringHandle,System.String)">
      <param name="handle"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringComparer.StartsWith(System.Reflection.Metadata.StringHandle,System.String,System.Boolean)">
      <param name="handle"></param>
      <param name="value"></param>
      <param name="ignoreCase"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MetadataStringDecoder">
      
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringDecoder.#ctor(System.Text.Encoding)">
      <param name="encoding"></param>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataStringDecoder.DefaultUTF8">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MetadataStringDecoder.Encoding">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MetadataStringDecoder.GetString(System.Byte*,System.Int32)">
      <param name="bytes"></param>
      <param name="byteCount"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodBodyBlock">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodBodyBlock.Create(System.Reflection.Metadata.BlobReader)">
      <param name="reader"></param>
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodBodyBlock.ExceptionRegions">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodBodyBlock.GetILBytes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodBodyBlock.GetILContent">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodBodyBlock.GetILReader">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodBodyBlock.LocalSignature">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodBodyBlock.LocalVariablesInitialized">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodBodyBlock.MaxStack">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodBodyBlock.Size">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodDebugInformation">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformation.Document">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformation.GetSequencePoints">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformation.GetStateMachineKickoffMethod">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformation.LocalSignature">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformation.SequencePointsBlob">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodDebugInformationHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.Equals(System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformationHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.op_Equality(System.Reflection.Metadata.MethodDebugInformationHandle,System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.op_Implicit(System.Reflection.Metadata.MethodDebugInformationHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.op_Implicit(System.Reflection.Metadata.MethodDebugInformationHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.op_Inequality(System.Reflection.Metadata.MethodDebugInformationHandle,System.Reflection.Metadata.MethodDebugInformationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandle.ToDefinitionHandle">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.MethodDebugInformationHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodDebugInformationHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#MethodDebugInformationHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDebugInformationHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinition.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.DecodeSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.DecodeSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.GetDeclarativeSecurityAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.GetDeclaringType">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.GetGenericParameters">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.GetImport">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinition.GetParameters">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinition.ImplAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinition.RelativeVirtualAddress">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinition.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.Equals(System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.op_Equality(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.op_Implicit(System.Reflection.Metadata.MethodDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.op_Implicit(System.Reflection.Metadata.MethodDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.op_Inequality(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandle.ToDebugInformationHandle">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.MethodDefinitionHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodDefinitionHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#MethodDefinitionHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodDefinitionHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodImplementation">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementation.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementation.MethodBody">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementation.MethodDeclaration">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementation.Type">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodImplementationHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.Equals(System.Reflection.Metadata.MethodImplementationHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementationHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.op_Equality(System.Reflection.Metadata.MethodImplementationHandle,System.Reflection.Metadata.MethodImplementationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.MethodImplementationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.MethodImplementationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.op_Implicit(System.Reflection.Metadata.MethodImplementationHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.op_Implicit(System.Reflection.Metadata.MethodImplementationHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandle.op_Inequality(System.Reflection.Metadata.MethodImplementationHandle,System.Reflection.Metadata.MethodImplementationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.MethodImplementationHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodImplementationHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#MethodImplementationHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodImplementationHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodImport">
      
    </member>
    <member name="P:System.Reflection.Metadata.MethodImport.Attributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImport.Module">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodImport.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodSignature`1">
      <typeparam name="TType"></typeparam>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSignature`1.#ctor(System.Reflection.Metadata.SignatureHeader,`0,System.Int32,System.Int32,System.Collections.Immutable.ImmutableArray{`0})">
      <param name="header"></param>
      <param name="returnType"></param>
      <param name="requiredParameterCount"></param>
      <param name="genericParameterCount"></param>
      <param name="parameterTypes"></param>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSignature`1.GenericParameterCount">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSignature`1.Header">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSignature`1.ParameterTypes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSignature`1.RequiredParameterCount">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSignature`1.ReturnType">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodSpecification">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecification.DecodeSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecification.DecodeSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecification.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSpecification.Method">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSpecification.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.MethodSpecificationHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.Equals(System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.MethodSpecificationHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.op_Equality(System.Reflection.Metadata.MethodSpecificationHandle,System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.op_Implicit(System.Reflection.Metadata.MethodSpecificationHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.op_Implicit(System.Reflection.Metadata.MethodSpecificationHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.MethodSpecificationHandle.op_Inequality(System.Reflection.Metadata.MethodSpecificationHandle,System.Reflection.Metadata.MethodSpecificationHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ModuleDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.ModuleDefinition.BaseGenerationId">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleDefinition.Generation">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleDefinition.GenerationId">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleDefinition.Mvid">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleDefinition.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ModuleDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.Equals(System.Reflection.Metadata.ModuleDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.op_Equality(System.Reflection.Metadata.ModuleDefinitionHandle,System.Reflection.Metadata.ModuleDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ModuleDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ModuleDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.op_Implicit(System.Reflection.Metadata.ModuleDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.op_Implicit(System.Reflection.Metadata.ModuleDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleDefinitionHandle.op_Inequality(System.Reflection.Metadata.ModuleDefinitionHandle,System.Reflection.Metadata.ModuleDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ModuleReference">
      
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReference.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleReference.Name">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ModuleReferenceHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.Equals(System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ModuleReferenceHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.op_Equality(System.Reflection.Metadata.ModuleReferenceHandle,System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.op_Implicit(System.Reflection.Metadata.ModuleReferenceHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.op_Implicit(System.Reflection.Metadata.ModuleReferenceHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ModuleReferenceHandle.op_Inequality(System.Reflection.Metadata.ModuleReferenceHandle,System.Reflection.Metadata.ModuleReferenceHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.NamespaceDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.NamespaceDefinition.ExportedTypes">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.NamespaceDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.NamespaceDefinition.NamespaceDefinitions">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.NamespaceDefinition.Parent">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.NamespaceDefinition.TypeDefinitions">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.NamespaceDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.Equals(System.Reflection.Metadata.NamespaceDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.NamespaceDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.op_Equality(System.Reflection.Metadata.NamespaceDefinitionHandle,System.Reflection.Metadata.NamespaceDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.NamespaceDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.op_Implicit(System.Reflection.Metadata.NamespaceDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.NamespaceDefinitionHandle.op_Inequality(System.Reflection.Metadata.NamespaceDefinitionHandle,System.Reflection.Metadata.NamespaceDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.Parameter">
      
    </member>
    <member name="P:System.Reflection.Metadata.Parameter.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Parameter.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Parameter.GetDefaultValue">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.Parameter.GetMarshallingDescriptor">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Parameter.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.Parameter.SequenceNumber">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ParameterHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.Equals(System.Reflection.Metadata.ParameterHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ParameterHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.op_Equality(System.Reflection.Metadata.ParameterHandle,System.Reflection.Metadata.ParameterHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.ParameterHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.ParameterHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.op_Implicit(System.Reflection.Metadata.ParameterHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.op_Implicit(System.Reflection.Metadata.ParameterHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandle.op_Inequality(System.Reflection.Metadata.ParameterHandle,System.Reflection.Metadata.ParameterHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ParameterHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.ParameterHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ParameterHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.ParameterHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.ParameterHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ParameterHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ParameterHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PEReaderExtensions">
      
    </member>
    <member name="M:System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader)">
      <param name="peReader"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions)">
      <param name="peReader"></param>
      <param name="options"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)">
      <param name="peReader"></param>
      <param name="options"></param>
      <param name="utf8Decoder"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PEReaderExtensions.GetMethodBody(System.Reflection.PortableExecutable.PEReader,System.Int32)">
      <param name="peReader"></param>
      <param name="relativeVirtualAddress"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PrimitiveSerializationTypeCode">
      
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Boolean">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Byte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Char">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Double">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Int16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Int32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Int64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.SByte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.Single">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.UInt16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.UInt32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveSerializationTypeCode.UInt64">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PrimitiveTypeCode">
      
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Boolean">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Byte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Char">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Double">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Int16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Int32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Int64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.IntPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Object">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.SByte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Single">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.TypedReference">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.UInt16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.UInt32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.UInt64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.UIntPtr">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.PrimitiveTypeCode.Void">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PropertyAccessors">
      
    </member>
    <member name="P:System.Reflection.Metadata.PropertyAccessors.Getter">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.PropertyAccessors.Setter">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PropertyDefinition">
      
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinition.Attributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinition.DecodeSignature``2(System.Reflection.Metadata.ISignatureTypeProvider{``0,``1},``1)">
      <param name="provider"></param>
      <param name="genericContext"></param>
      <typeparam name="TType"></typeparam>
      <typeparam name="TGenericContext"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinition.DecodeSignature``1(System.Reflection.Metadata.ISignatureTypeProvider{``0})">
      <param name="provider"></param>
      <typeparam name="TType"></typeparam>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinition.GetAccessors">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinition.GetCustomAttributes">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinition.GetDefaultValue">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinition.Name">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinition.Signature">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PropertyDefinitionHandle">
      
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.Equals(System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.GetHashCode">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinitionHandle.IsNil">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.op_Equality(System.Reflection.Metadata.PropertyDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.op_Explicit(System.Reflection.Metadata.EntityHandle to System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.op_Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.op_Implicit(System.Reflection.Metadata.PropertyDefinitionHandle to System.Reflection.Metadata.EntityHandle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.op_Implicit(System.Reflection.Metadata.PropertyDefinitionHandle to System.Reflection.Metadata.Handle)">
      <param name="handle"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandle.op_Inequality(System.Reflection.Metadata.PropertyDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)">
      <param name="left"></param>
      <param name="right"></param>
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator.System#Collections#IEnumerator#Reset">
      
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.PropertyDefinitionHandleCollection">
      
    </member>
    <member name="P:System.Reflection.Metadata.PropertyDefinitionHandleCollection.Count">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandleCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#PropertyDefinitionHandle}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.PropertyDefinitionHandleCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.ReservedBlob`1">
      <typeparam name="THandle"></typeparam>
    </member>
    <member name="P:System.Reflection.Metadata.ReservedBlob`1.Content">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.ReservedBlob`1.CreateWriter">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.ReservedBlob`1.Handle">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SequencePoint">
      
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.Document">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.EndColumn">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.EndLine">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePoint.Equals(System.Object)">
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePoint.Equals(System.Reflection.Metadata.SequencePoint)">
      <param name="other"></param>
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePoint.GetHashCode">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SequencePoint.HiddenLine">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.IsHidden">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.Offset">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.StartColumn">
      <returns></returns>
    </member>
    <member name="P:System.Reflection.Metadata.SequencePoint.StartLine">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SequencePointCollection.Enumerator">
      
    </member>
    <member name="P:System.Reflection.Metadata.SequencePointCollection.Enumerator.Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePointCollection.Enumerator.MoveNext">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePointCollection.Enumerator.Reset">
      
    </member>
    <member name="P:System.Reflection.Metadata.SequencePointCollection.Enumerator.System#Collections#IEnumerator#Current">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePointCollection.Enumerator.System#IDisposable#Dispose">
      
    </member>
    <member name="T:System.Reflection.Metadata.SequencePointCollection">
      
    </member>
    <member name="M:System.Reflection.Metadata.SequencePointCollection.GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePointCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#SequencePoint}#GetEnumerator">
      <returns></returns>
    </member>
    <member name="M:System.Reflection.Metadata.SequencePointCollection.System#Collections#IEnumerable#GetEnumerator">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SerializationTypeCode">
      
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Boolean">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Byte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Char">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Double">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Enum">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Int16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Int32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Int64">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Invalid">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.SByte">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Single">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.String">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.SZArray">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.TaggedObject">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.Type">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.UInt16">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.UInt32">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SerializationTypeCode.UInt64">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SignatureAttributes">
      
    </member>
    <member name="F:System.Reflection.Metadata.SignatureAttributes.ExplicitThis">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureAttributes.Generic">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureAttributes.Instance">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureAttributes.None">
      <returns></returns>
    </member>
    <member name="T:System.Reflection.Metadata.SignatureCallingConvention">
      
    </member>
    <member name="F:System.Reflection.Metadata.SignatureCallingConvention.CDecl">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureCallingConvention.Default">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureCallingConvention.FastCall">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureCallingConvention.StdCall">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureCallingConvention.ThisCall">
      <returns></returns>
    </member>
    <member name="F:System.Reflection.Metadata.SignatureCallingConvention.VarArgs">
      <returns></returns>
    </member>
  </members>
</doc></span>