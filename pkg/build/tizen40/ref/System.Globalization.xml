<?xml version="1.0" encoding="utf-8"?><span>
<doc>
  <assembly>
    <name>System.Globalization</name>
  </assembly>
  <members>
    <member name="T:System.Globalization.Calendar">
      <summary>Represents time in divisions, such as weeks, months, and years.</summary>
    </member>
    <member name="M:System.Globalization.Calendar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.Calendar"></see> class.</summary>
    </member>
    <member name="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is the specified number of days away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add days.</param>
      <param name="days">The number of days to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of days to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="days">days</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is the specified number of hours away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add hours.</param>
      <param name="hours">The number of hours to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of hours to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hours">hours</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is the specified number of milliseconds away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to add milliseconds to.</param>
      <param name="milliseconds">The number of milliseconds to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of milliseconds to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="milliseconds">milliseconds</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is the specified number of minutes away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add minutes.</param>
      <param name="minutes">The number of minutes to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of minutes to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minutes">minutes</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.DateTime"></see> that is the specified number of months away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add months.</param>
      <param name="months">The number of months to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of months to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="months">months</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is the specified number of seconds away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add seconds.</param>
      <param name="seconds">The number of seconds to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of seconds to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="seconds">seconds</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is the specified number of weeks away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add weeks.</param>
      <param name="weeks">The number of weeks to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of weeks to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="weeks">weeks</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.DateTime"></see> that is the specified number of years away from the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to which to add years.</param>
      <param name="years">The number of years to add.</param>
      <returns>The <see cref="T:System.DateTime"></see> that results from adding the specified number of years to the specified <see cref="T:System.DateTime"></see>.</returns>
      <exception cref="T:System.ArgumentException">The resulting <see cref="T:System.DateTime"></see> is outside the supported range of this calendar.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="years">years</paramref> is outside the supported range of the <see cref="T:System.DateTime"></see> return value.</exception>
    </member>
    <member name="F:System.Globalization.Calendar.CurrentEra">
      <summary>Represents the current era of the current calendar.</summary>
      <returns></returns>
    </member>
    <member name="P:System.Globalization.Calendar.Eras">
      <summary>When overridden in a derived class, gets the list of eras in the current calendar.</summary>
      <returns>An array of integers that represents the eras in the current calendar.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)">
      <summary>When overridden in a derived class, returns the day of the month in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>A positive integer that represents the day of the month in the <paramref name="time">time</paramref> parameter.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)">
      <summary>When overridden in a derived class, returns the day of the week in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>A <see cref="T:System.DayOfWeek"></see> value that represents the day of the week in the <paramref name="time">time</paramref> parameter.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)">
      <summary>When overridden in a derived class, returns the day of the year in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>A positive integer that represents the day of the year in the <paramref name="time">time</paramref> parameter.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)">
      <summary>Returns the number of days in the specified month and year of the current era.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <returns>The number of days in the specified month in the specified year in the current era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
      <summary>When overridden in a derived class, returns the number of days in the specified month, year, and era.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>The number of days in the specified month in the specified year in the specified era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)">
      <summary>Returns the number of days in the specified year of the current era.</summary>
      <param name="year">An integer that represents the year.</param>
      <returns>The number of days in the specified year in the current era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)">
      <summary>When overridden in a derived class, returns the number of days in the specified year and era.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>The number of days in the specified year in the specified era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetEra(System.DateTime)">
      <summary>When overridden in a derived class, returns the era in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>An integer that represents the era in <paramref name="time">time</paramref>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetHour(System.DateTime)">
      <summary>Returns the hours value in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>An integer from 0 to 23 that represents the hour in <paramref name="time">time</paramref>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)">
      <summary>Calculates the leap month for a specified year and era.</summary>
      <param name="year">A year.</param>
      <param name="era">An era.</param>
      <returns>A positive integer that indicates the leap month in the specified year and era.   -or-   Zero if this calendar does not support a leap month or if the <paramref name="year">year</paramref> and <paramref name="era">era</paramref> parameters do not specify a leap year.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)">
      <summary>Returns the milliseconds value in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <paramref name="time">time</paramref> parameter.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetMinute(System.DateTime)">
      <summary>Returns the minutes value in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>An integer from 0 to 59 that represents the minutes in <paramref name="time">time</paramref>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetMonth(System.DateTime)">
      <summary>When overridden in a derived class, returns the month in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>A positive integer that represents the month in <paramref name="time">time</paramref>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)">
      <summary>Returns the number of months in the specified year in the current era.</summary>
      <param name="year">An integer that represents the year.</param>
      <returns>The number of months in the specified year in the current era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)">
      <summary>When overridden in a derived class, returns the number of months in the specified year in the specified era.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>The number of months in the specified year in the specified era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetSecond(System.DateTime)">
      <summary>Returns the seconds value in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>An integer from 0 to 59 that represents the seconds in <paramref name="time">time</paramref>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)">
      <summary>Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime"></see> value.</summary>
      <param name="time">A date and time value.</param>
      <param name="rule">An enumeration value that defines a calendar week.</param>
      <param name="firstDayOfWeek">An enumeration value that represents the first day of the week.</param>
      <returns>A positive integer that represents the week of the year that includes the date in the <paramref name="time">time</paramref> parameter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time">time</paramref> is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime"></see> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime"></see>.   -or-  <paramref name="firstDayOfWeek">firstDayOfWeek</paramref> is not a valid <see cref="T:System.DayOfWeek"></see> value.   -or-  <paramref name="rule">rule</paramref> is not a valid <see cref="T:System.Globalization.CalendarWeekRule"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.GetYear(System.DateTime)">
      <summary>When overridden in a derived class, returns the year in the specified <see cref="T:System.DateTime"></see>.</summary>
      <param name="time">The <see cref="T:System.DateTime"></see> to read.</param>
      <returns>An integer that represents the year in <paramref name="time">time</paramref>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)">
      <summary>Determines whether the specified date in the current era is a leap day.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <param name="day">A positive integer that represents the day.</param>
      <returns>true if the specified day is a leap day; otherwise, false.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.   -or-  <paramref name="day">day</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>When overridden in a derived class, determines whether the specified date in the specified era is a leap day.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <param name="day">A positive integer that represents the day.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>true if the specified day is a leap day; otherwise, false.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.   -or-  <paramref name="day">day</paramref> is outside the range supported by the calendar.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
      <summary>When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>true if the specified month is a leap month; otherwise, false.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)">
      <summary>Determines whether the specified month in the specified year in the current era is a leap month.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <returns>true if the specified month is a leap month; otherwise, false.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.IsLeapYear(System.Int32)">
      <summary>Determines whether the specified year in the current era is a leap year.</summary>
      <param name="year">An integer that represents the year.</param>
      <returns>true if the specified year is a leap year; otherwise, false.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)">
      <summary>When overridden in a derived class, determines whether the specified year in the specified era is a leap year.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>true if the specified year is a leap year; otherwise, false.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="P:System.Globalization.Calendar.IsReadOnly">
      <summary>Gets a value indicating whether this <see cref="T:System.Globalization.Calendar"></see> object is read-only.</summary>
      <returns>true if this <see cref="T:System.Globalization.Calendar"></see> object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.Calendar.MaxSupportedDateTime">
      <summary>Gets the latest date and time supported by this <see cref="T:System.Globalization.Calendar"></see> object.</summary>
      <returns>The latest date and time supported by this calendar. The default is <see cref="F:System.DateTime.MaxValue"></see>.</returns>
    </member>
    <member name="P:System.Globalization.Calendar.MinSupportedDateTime">
      <summary>Gets the earliest date and time supported by this <see cref="T:System.Globalization.Calendar"></see> object.</summary>
      <returns>The earliest date and time supported by this calendar. The default is <see cref="F:System.DateTime.MinValue"></see>.</returns>
    </member>
    <member name="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Returns a <see cref="T:System.DateTime"></see> that is set to the specified date and time in the current era.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <param name="day">A positive integer that represents the day.</param>
      <param name="hour">An integer from 0 to 23 that represents the hour.</param>
      <param name="minute">An integer from 0 to 59 that represents the minute.</param>
      <param name="second">An integer from 0 to 59 that represents the second.</param>
      <param name="millisecond">An integer from 0 to 999 that represents the millisecond.</param>
      <returns>The <see cref="T:System.DateTime"></see> that is set to the specified date and time in the current era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.   -or-  <paramref name="day">day</paramref> is outside the range supported by the calendar.   -or-  <paramref name="hour">hour</paramref> is less than zero or greater than 23.   -or-  <paramref name="minute">minute</paramref> is less than zero or greater than 59.   -or-  <paramref name="second">second</paramref> is less than zero or greater than 59.   -or-  <paramref name="millisecond">millisecond</paramref> is less than zero or greater than 999.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.DateTime"></see> that is set to the specified date and time in the specified era.</summary>
      <param name="year">An integer that represents the year.</param>
      <param name="month">A positive integer that represents the month.</param>
      <param name="day">A positive integer that represents the day.</param>
      <param name="hour">An integer from 0 to 23 that represents the hour.</param>
      <param name="minute">An integer from 0 to 59 that represents the minute.</param>
      <param name="second">An integer from 0 to 59 that represents the second.</param>
      <param name="millisecond">An integer from 0 to 999 that represents the millisecond.</param>
      <param name="era">An integer that represents the era.</param>
      <returns>The <see cref="T:System.DateTime"></see> that is set to the specified date and time in the current era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.   -or-  <paramref name="month">month</paramref> is outside the range supported by the calendar.   -or-  <paramref name="day">day</paramref> is outside the range supported by the calendar.   -or-  <paramref name="hour">hour</paramref> is less than zero or greater than 23.   -or-  <paramref name="minute">minute</paramref> is less than zero or greater than 59.   -or-  <paramref name="second">second</paramref> is less than zero or greater than 59.   -or-  <paramref name="millisecond">millisecond</paramref> is less than zero or greater than 999.   -or-  <paramref name="era">era</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)">
      <summary>Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.Calendar.TwoDigitYearMax"></see> property to determine the appropriate century.</summary>
      <param name="year">A two-digit or four-digit integer that represents the year to convert.</param>
      <returns>An integer that contains the four-digit representation of <paramref name="year">year</paramref>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year">year</paramref> is outside the range supported by the calendar.</exception>
    </member>
    <member name="P:System.Globalization.Calendar.TwoDigitYearMax">
      <summary>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</summary>
      <returns>The last year of a 100-year range that can be represented by a 2-digit year.</returns>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Globalization.Calendar"></see> object is read-only.</exception>
    </member>
    <member name="T:System.Globalization.CalendarWeekRule">
      <summary>Defines different rules for determining the first week of the year.</summary>
    </member>
    <member name="F:System.Globalization.CalendarWeekRule.FirstDay">
      <summary>Indicates that the first week of the year starts on the first day of the year and ends before the following designated first day of the week. The value is 0.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CalendarWeekRule.FirstFourDayWeek">
      <summary>Indicates that the first week of the year is the first week with four or more days before the designated first day of the week. The value is 2.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CalendarWeekRule.FirstFullWeek">
      <summary>Indicates that the first week of the year begins on the first occurrence of the designated first day of the week on or after the first day of the year. The value is 1.</summary>
      <returns></returns>
    </member>
    <member name="T:System.Globalization.CharUnicodeInfo">
      <summary>Retrieves information about a Unicode character. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)">
      <summary>Gets the numeric value associated with the specified character.</summary>
      <param name="ch">The Unicode character for which to get the numeric value.</param>
      <returns>The numeric value associated with the specified character.   -or-   -1, if the specified character is not a numeric character.</returns>
    </member>
    <member name="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)">
      <summary>Gets the numeric value associated with the character at the specified index of the specified string.</summary>
      <param name="s">The <see cref="T:System.String"></see> containing the Unicode character for which to get the numeric value.</param>
      <param name="index">The index of the Unicode character for which to get the numeric value.</param>
      <returns>The numeric value associated with the character at the specified index of the specified string.   -or-   -1, if the character at the specified index of the specified string is not a numeric character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="s">s</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is outside the range of valid indexes in <paramref name="s">s</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)">
      <summary>Gets the Unicode category of the specified character.</summary>
      <param name="ch">The Unicode character for which to get the Unicode category.</param>
      <returns>A <see cref="T:System.Globalization.UnicodeCategory"></see> value indicating the category of the specified character.</returns>
    </member>
    <member name="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)">
      <summary>Gets the Unicode category of the character at the specified index of the specified string.</summary>
      <param name="s">The <see cref="T:System.String"></see> containing the Unicode character for which to get the Unicode category.</param>
      <param name="index">The index of the Unicode character for which to get the Unicode category.</param>
      <returns>A <see cref="T:System.Globalization.UnicodeCategory"></see> value indicating the category of the character at the specified index of the specified string.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="s">s</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is outside the range of valid indexes in <paramref name="s">s</paramref>.</exception>
    </member>
    <member name="T:System.Globalization.CompareInfo">
      <summary>Implements a set of methods for culture-sensitive string comparisons.</summary>
    </member>
    <member name="M:System.Globalization.CompareInfo.Compare(System.String,System.String)">
      <summary>Compares two strings.</summary>
      <param name="string1">The first string to compare.</param>
      <param name="string2">The second string to compare.</param>
      <returns><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="2"><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A 32-bit signed integer indicating the lexical relationship between the two comparands.  </p>
 <table><thead><tr><th> Value  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="4" sourceendlinenumber="4"> </th><th> Condition  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="6" sourceendlinenumber="6"> </th></tr></thead><tbody><tr><td> zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="8" sourceendlinenumber="8"> </td><td> The two strings are equal.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="10" sourceendlinenumber="10"> </td></tr><tr><td> less than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="12" sourceendlinenumber="12"> </td><td><code data-dev-comment-type="paramref">string1</code> is less than <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="14" sourceendlinenumber="14"> </td></tr><tr><td> greater than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="16" sourceendlinenumber="16"> </td><td><code data-dev-comment-type="paramref">string1</code> is greater than <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="18" sourceendlinenumber="18"> </td></tr></tbody></table></p>
</returns>
    </member>
    <member name="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)">
      <summary>Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="string1">The first string to compare.</param>
      <param name="string2">The second string to compare.</param>
      <param name="options">A value that defines how string1 and string2 should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>, and <see cref="F:System.Globalization.CompareOptions.StringSort"></see>.</param>
      <returns><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="2"><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A 32-bit signed integer indicating the lexical relationship between the two comparands.  </p>
 <table><thead><tr><th> Value  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="4" sourceendlinenumber="4"> </th><th> Condition  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="6" sourceendlinenumber="6"> </th></tr></thead><tbody><tr><td> zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="8" sourceendlinenumber="8"> </td><td> The two strings are equal.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="10" sourceendlinenumber="10"> </td></tr><tr><td> less than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="12" sourceendlinenumber="12"> </td><td><code data-dev-comment-type="paramref">string1</code> is less than <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="14" sourceendlinenumber="14"> </td></tr><tr><td> greater than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="16" sourceendlinenumber="16"> </td><td><code data-dev-comment-type="paramref">string1</code> is greater than <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="18" sourceendlinenumber="18"> </td></tr></tbody></table></p>
</returns>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)">
      <summary>Compares the end section of a string with the end section of another string.</summary>
      <param name="string1">The first string to compare.</param>
      <param name="offset1">The zero-based index of the character in string1 at which to start comparing.</param>
      <param name="string2">The second string to compare.</param>
      <param name="offset2">The zero-based index of the character in string2 at which to start comparing.</param>
      <returns><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="2"><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A 32-bit signed integer indicating the lexical relationship between the two comparands.  </p>
 <table><thead><tr><th> Value  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="4" sourceendlinenumber="4"> </th><th> Condition  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="6" sourceendlinenumber="6"> </th></tr></thead><tbody><tr><td> zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="8" sourceendlinenumber="8"> </td><td> The two strings are equal.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="10" sourceendlinenumber="10"> </td></tr><tr><td> less than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="12" sourceendlinenumber="12"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is less than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="14" sourceendlinenumber="14"> </td></tr><tr><td> greater than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="16" sourceendlinenumber="16"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is greater than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="18" sourceendlinenumber="18"> </td></tr></tbody></table></p>
</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1">offset1</paramref> or <paramref name="offset2">offset2</paramref> is less than zero.   -or-  <paramref name="offset1">offset1</paramref> is greater than or equal to the number of characters in <paramref name="string1">string1</paramref>.   -or-  <paramref name="offset2">offset2</paramref> is greater than or equal to the number of characters in <paramref name="string2">string2</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)">
      <summary>Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="string1">The first string to compare.</param>
      <param name="offset1">The zero-based index of the character in string1 at which to start comparing.</param>
      <param name="string2">The second string to compare.</param>
      <param name="offset2">The zero-based index of the character in string2 at which to start comparing.</param>
      <param name="options">A value that defines how string1 and string2 should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>, and <see cref="F:System.Globalization.CompareOptions.StringSort"></see>.</param>
      <returns><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="2"><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A 32-bit signed integer indicating the lexical relationship between the two comparands.  </p>
 <table><thead><tr><th> Value  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="4" sourceendlinenumber="4"> </th><th> Condition  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="6" sourceendlinenumber="6"> </th></tr></thead><tbody><tr><td> zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="8" sourceendlinenumber="8"> </td><td> The two strings are equal.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="10" sourceendlinenumber="10"> </td></tr><tr><td> less than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="12" sourceendlinenumber="12"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is less than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="14" sourceendlinenumber="14"> </td></tr><tr><td> greater than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="16" sourceendlinenumber="16"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is greater than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="18" sourceendlinenumber="18"> </td></tr></tbody></table></p>
</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1">offset1</paramref> or <paramref name="offset2">offset2</paramref> is less than zero.   -or-  <paramref name="offset1">offset1</paramref> is greater than or equal to the number of characters in <paramref name="string1">string1</paramref>.   -or-  <paramref name="offset2">offset2</paramref> is greater than or equal to the number of characters in <paramref name="string2">string2</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>Compares a section of one string with a section of another string.</summary>
      <param name="string1">The first string to compare.</param>
      <param name="offset1">The zero-based index of the character in string1 at which to start comparing.</param>
      <param name="length1">The number of consecutive characters in string1 to compare.</param>
      <param name="string2">The second string to compare.</param>
      <param name="offset2">The zero-based index of the character in string2 at which to start comparing.</param>
      <param name="length2">The number of consecutive characters in string2 to compare.</param>
      <returns><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="2"><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A 32-bit signed integer indicating the lexical relationship between the two comparands.  </p>
 <table><thead><tr><th> Value  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="4" sourceendlinenumber="4"> </th><th> Condition  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="6" sourceendlinenumber="6"> </th></tr></thead><tbody><tr><td> zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="8" sourceendlinenumber="8"> </td><td> The two strings are equal.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="10" sourceendlinenumber="10"> </td></tr><tr><td> less than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="12" sourceendlinenumber="12"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is less than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="14" sourceendlinenumber="14"> </td></tr><tr><td> greater than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="16" sourceendlinenumber="16"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is greater than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="18" sourceendlinenumber="18"> </td></tr></tbody></table></p>
</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1">offset1</paramref> or <paramref name="length1">length1</paramref> or <paramref name="offset2">offset2</paramref> or <paramref name="length2">length2</paramref> is less than zero.   -or-  <paramref name="offset1">offset1</paramref> is greater than or equal to the number of characters in <paramref name="string1">string1</paramref>.   -or-  <paramref name="offset2">offset2</paramref> is greater than or equal to the number of characters in <paramref name="string2">string2</paramref>.   -or-  <paramref name="length1">length1</paramref> is greater than the number of characters from <paramref name="offset1">offset1</paramref> to the end of <paramref name="string1">string1</paramref>.   -or-  <paramref name="length2">length2</paramref> is greater than the number of characters from <paramref name="offset2">offset2</paramref> to the end of <paramref name="string2">string2</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)">
      <summary>Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="string1">The first string to compare.</param>
      <param name="offset1">The zero-based index of the character in string1 at which to start comparing.</param>
      <param name="length1">The number of consecutive characters in string1 to compare.</param>
      <param name="string2">The second string to compare.</param>
      <param name="offset2">The zero-based index of the character in string2 at which to start comparing.</param>
      <param name="length2">The number of consecutive characters in string2 to compare.</param>
      <param name="options">A value that defines how string1 and string2 should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>, and <see cref="F:System.Globalization.CompareOptions.StringSort"></see>.</param>
      <returns><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="2"><p sourcefile="System.Globalization.yml" sourcestartlinenumber="1" sourceendlinenumber="1">A 32-bit signed integer indicating the lexical relationship between the two comparands.  </p>
 <table><thead><tr><th> Value  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="4" sourceendlinenumber="4"> </th><th> Condition  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="6" sourceendlinenumber="6"> </th></tr></thead><tbody><tr><td> zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="8" sourceendlinenumber="8"> </td><td> The two strings are equal.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="10" sourceendlinenumber="10"> </td></tr><tr><td> less than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="12" sourceendlinenumber="12"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is less than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="14" sourceendlinenumber="14"> </td></tr><tr><td> greater than zero  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="16" sourceendlinenumber="16"> </td><td> The specified section of <code data-dev-comment-type="paramref">string1</code> is greater than the specified section of <code data-dev-comment-type="paramref">string2</code>.  <p>
<p sourcefile="System.Globalization.yml" sourcestartlinenumber="18" sourceendlinenumber="18"> </td></tr></tbody></table></p>
</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset1">offset1</paramref> or <paramref name="length1">length1</paramref> or <paramref name="offset2">offset2</paramref> or <paramref name="length2">length2</paramref> is less than zero.   -or-  <paramref name="offset1">offset1</paramref> is greater than or equal to the number of characters in <paramref name="string1">string1</paramref>.   -or-  <paramref name="offset2">offset2</paramref> is greater than or equal to the number of characters in <paramref name="string2">string2</paramref>.   -or-  <paramref name="length1">length1</paramref> is greater than the number of characters from <paramref name="offset1">offset1</paramref> to the end of <paramref name="string1">string1</paramref>.   -or-  <paramref name="length2">length2</paramref> is greater than the number of characters from <paramref name="offset2">offset2</paramref> to the end of <paramref name="string2">string2</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo"></see> object.</summary>
      <param name="value">The object to compare with the current <see cref="T:System.Globalization.CompareInfo"></see>.</param>
      <returns>true if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo"></see>; otherwise, false.</returns>
    </member>
    <member name="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)">
      <summary>Initializes a new <see cref="T:System.Globalization.CompareInfo"></see> object that is associated with the culture with the specified name.</summary>
      <param name="name">A string representing the culture name.</param>
      <returns>A new <see cref="T:System.Globalization.CompareInfo"></see> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly"></see>.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="name">name</paramref> is an invalid culture name.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo"></see> for hashing algorithms and data structures, such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Globalization.CompareInfo"></see>.</returns>
    </member>
    <member name="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)">
      <summary>Gets the hash code for a string based on specified comparison options.</summary>
      <param name="source">The string whose hash code is to be returned.</param>
      <param name="options">A value that determines how strings are compared.</param>
      <returns>A 32-bit signed integer hash code.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)">
      <summary>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that starts at <paramref name="startIndex">startIndex</paramref> and contains the number of elements specified by <paramref name="count">count</paramref>; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that starts at <paramref name="startIndex">startIndex</paramref> and contains the number of elements specified by <paramref name="count">count</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that starts at <paramref name="startIndex">startIndex</paramref> and contains the number of elements specified by <paramref name="count">count</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that extends from <paramref name="startIndex">startIndex</paramref> to the end of <paramref name="source">source</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that extends from <paramref name="startIndex">startIndex</paramref> to the end of <paramref name="source">source</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)">
      <summary>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that starts at <paramref name="startIndex">startIndex</paramref> and contains the number of elements specified by <paramref name="count">count</paramref>; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)">
      <summary>Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>, using the specified comparison options; otherwise, -1. Returns 0 (zero) if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)">
      <summary>Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="options">A value that defines how the strings should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>, using the specified comparison options; otherwise, -1. Returns 0 (zero) if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)">
      <summary>Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>; otherwise, -1. Returns 0 (zero) if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)">
      <summary>Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <returns>The zero-based index of the first occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>; otherwise, -1. Returns 0 (zero) if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)">
      <summary>Determines whether the specified source string starts with the specified prefix.</summary>
      <param name="source">The string to search in.</param>
      <param name="prefix">The string to compare with the beginning of source.</param>
      <returns>true if the length of <paramref name="prefix">prefix</paramref> is less than or equal to the length of <paramref name="source">source</paramref> and <paramref name="source">source</paramref> starts with <paramref name="prefix">prefix</paramref>; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="prefix">prefix</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)">
      <summary>Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search in.</param>
      <param name="prefix">The string to compare with the beginning of source.</param>
      <param name="options">A value that defines how source and prefix should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>true if the length of <paramref name="prefix">prefix</paramref> is less than or equal to the length of <paramref name="source">source</paramref> and <paramref name="source">source</paramref> starts with <paramref name="prefix">prefix</paramref>; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="prefix">prefix</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)">
      <summary>Determines whether the specified source string ends with the specified suffix.</summary>
      <param name="source">The string to search in.</param>
      <param name="suffix">The string to compare with the end of source.</param>
      <returns>true if the length of <paramref name="suffix">suffix</paramref> is less than or equal to the length of <paramref name="source">source</paramref> and <paramref name="source">source</paramref> ends with <paramref name="suffix">suffix</paramref>; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="suffix">suffix</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)">
      <summary>Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search in.</param>
      <param name="suffix">The string to compare with the end of source.</param>
      <param name="options">A value that defines how source and suffix should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>true if the length of <paramref name="suffix">suffix</paramref> is less than or equal to the length of <paramref name="source">source</paramref> and <paramref name="source">source</paramref> ends with <paramref name="suffix">suffix</paramref>; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="suffix">suffix</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that contains the number of elements specified by <paramref name="count">count</paramref> and that ends at <paramref name="startIndex">startIndex</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)">
      <summary>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that contains the number of elements specified by <paramref name="count">count</paramref> and that ends at <paramref name="startIndex">startIndex</paramref>; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that contains the number of elements specified by <paramref name="count">count</paramref> and that ends at <paramref name="startIndex">startIndex</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that extends from the beginning of <paramref name="source">source</paramref> to <paramref name="startIndex">startIndex</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)">
      <summary>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="count">The number of elements in the section to search.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that contains the number of elements specified by <paramref name="count">count</paramref> and that ends at <paramref name="startIndex">startIndex</paramref>; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.   -or-  <paramref name="count">count</paramref> is less than zero.   -or-  <paramref name="startIndex">startIndex</paramref> and <paramref name="count">count</paramref> do not specify a valid section in <paramref name="source">source</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)">
      <summary>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="startIndex">The zero-based starting index of the backward search.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within the section of <paramref name="source">source</paramref> that extends from the beginning of <paramref name="source">source</paramref> to <paramref name="startIndex">startIndex</paramref>, using the specified comparison options; otherwise, -1. Returns <paramref name="startIndex">startIndex</paramref> if <paramref name="value">value</paramref> is an ignorable character.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex">startIndex</paramref> is outside the range of valid indexes for <paramref name="source">source</paramref>.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)">
      <summary>Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>, using the specified comparison options; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)">
      <summary>Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions"></see> value.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <param name="options">A value that defines how source and value should be compared. options is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal"></see>, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace"></see>, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth"></see>, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType"></see>.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>, using the specified comparison options; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="options">options</paramref> contains an invalid <see cref="T:System.Globalization.CompareOptions"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)">
      <summary>Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The string to locate within source.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.   -or-  <paramref name="value">value</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)">
      <summary>Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</summary>
      <param name="source">The string to search.</param>
      <param name="value">The character to locate within source.</param>
      <returns>The zero-based index of the last occurrence of <paramref name="value">value</paramref>, if found, within <paramref name="source">source</paramref>; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="source">source</paramref> is null.</exception>
    </member>
    <member name="P:System.Globalization.CompareInfo.Name">
      <summary>Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo"></see> object.</summary>
      <returns>The name of a culture.</returns>
    </member>
    <member name="M:System.Globalization.CompareInfo.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo"></see> object.</summary>
      <returns>A string that represents the current <see cref="T:System.Globalization.CompareInfo"></see> object.</returns>
    </member>
    <member name="T:System.Globalization.CompareOptions">
      <summary>Defines the string comparison options to use with <see cref="T:System.Globalization.CompareInfo"></see>.</summary>
    </member>
    <member name="F:System.Globalization.CompareOptions.IgnoreCase">
      <summary>Indicates that the string comparison must ignore case.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.IgnoreKanaType">
      <summary>Indicates that the string comparison must ignore the Kana type. Kana type refers to Japanese hiragana and katakana characters, which represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as &quot;computer&quot; or &quot;Internet&quot;. A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.IgnoreNonSpace">
      <summary>Indicates that the string comparison must ignore nonspacing combining characters, such as diacritics. The <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see> defines combining characters as characters that are combined with base characters to produce a new character. Nonspacing combining characters do not occupy a spacing position by themselves when rendered.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.IgnoreSymbols">
      <summary>Indicates that the string comparison must ignore symbols, such as white-space characters, punctuation, currency symbols, the percent sign, mathematical symbols, the ampersand, and so on.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.IgnoreWidth">
      <summary>Indicates that the string comparison must ignore the character width. For example, Japanese katakana characters can be written as full-width or half-width. If this value is selected, the katakana characters written as full-width are considered equal to the same characters written as half-width.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.None">
      <summary>Indicates the default option settings for string comparisons.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.Ordinal">
      <summary>Indicates that the string comparison must use successive Unicode UTF-16 encoded values of the string (code unit by code unit comparison), leading to a fast comparison but one that is culture-insensitive. A string starting with a code unit XXXX16 comes before a string starting with YYYY16, if XXXX16 is less than YYYY16. This value cannot be combined with other <see cref="T:System.Globalization.CompareOptions"></see> values and must be used alone.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.OrdinalIgnoreCase">
      <summary>String comparison must ignore case, then perform an ordinal comparison. This technique is equivalent to converting the string to uppercase using the invariant culture and then performing an ordinal comparison on the result.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.CompareOptions.StringSort">
      <summary>Indicates that the string comparison must use the string sort algorithm. In a string sort, the hyphen and the apostrophe, as well as other nonalphanumeric symbols, come before alphanumeric characters.</summary>
      <returns></returns>
    </member>
    <member name="T:System.Globalization.CultureInfo">
      <summary>Provides information about a specific culture (called a locale for unmanaged code development). The information includes the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers.</summary>
    </member>
    <member name="M:System.Globalization.CultureInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo"></see> class based on the culture specified by name.</summary>
      <param name="name">A predefined <see cref="T:System.Globalization.CultureInfo"></see> name, <see cref="P:System.Globalization.CultureInfo.Name"></see> of an existing <see cref="T:System.Globalization.CultureInfo"></see>, or Windows-only culture name. name is not case-sensitive.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
      <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name">name</paramref> is not a valid culture name. For more information, see the Notes to Callers section.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.Calendar">
      <summary>Gets the default calendar used by the culture.</summary>
      <returns>A <see cref="T:System.Globalization.Calendar"></see> that represents the default calendar used by the culture.</returns>
    </member>
    <member name="M:System.Globalization.CultureInfo.Clone">
      <summary>Creates a copy of the current <see cref="T:System.Globalization.CultureInfo"></see>.</summary>
      <returns>A copy of the current <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.CompareInfo">
      <summary>Gets the <see cref="T:System.Globalization.CompareInfo"></see> that defines how to compare strings for the culture.</summary>
      <returns>The <see cref="T:System.Globalization.CompareInfo"></see> that defines how to compare strings for the culture.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.CurrentCulture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo"></see> object that represents the culture used by the current thread.</summary>
      <returns>An object that represents the culture used by the current thread.</returns>
      <exception cref="T:System.ArgumentNullException">The property is set to null.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.CurrentUICulture">
      <summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo"></see> object that represents the current user interface culture used by the Resource Manager to look up culture-specific resources at run time.</summary>
      <returns>The culture used by the Resource Manager to look up culture-specific resources at run time.</returns>
      <exception cref="T:System.ArgumentNullException">The property is set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is set to a culture name that cannot be used to locate a resource file. Resource filenames can include only letters, numbers, hyphens, or underscores.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.DateTimeFormat">
      <summary>Gets or sets a <see cref="T:System.Globalization.DateTimeFormatInfo"></see> that defines the culturally appropriate format of displaying dates and times.</summary>
      <returns>A <see cref="T:System.Globalization.DateTimeFormatInfo"></see> that defines the culturally appropriate format of displaying dates and times.</returns>
      <exception cref="T:System.ArgumentNullException">The property is set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Globalization.CultureInfo.DateTimeFormat"></see> property or any of the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> properties is set, and the <see cref="T:System.Globalization.CultureInfo"></see> is read-only.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture">
      <summary>Gets or sets the default culture for threads in the current application domain.</summary>
      <returns>The default culture for threads in the current application domain, or null if the current system culture is the default thread culture in the application domain.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture">
      <summary>Gets or sets the default UI culture for threads in the current application domain.</summary>
      <returns>The default UI culture for threads in the current application domain, or null if the current system UI culture is the default thread UI culture in the application domain.</returns>
      <exception cref="T:System.ArgumentException">In a set operation, the <see cref="P:System.Globalization.CultureInfo.Name"></see> property value is invalid.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.DisplayName">
      <summary>Gets the full localized culture name.</summary>
      <returns>The full localized culture name in the format languagefull [country/regionfull], where languagefull is the full name of the language and country/regionfull is the full name of the country/region.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.EnglishName">
      <summary>Gets the culture name in the format languagefull [country/regionfull] in English.</summary>
      <returns>The culture name in the format languagefull [country/regionfull] in English, where languagefull is the full name of the language and country/regionfull is the full name of the country/region.</returns>
    </member>
    <member name="M:System.Globalization.CultureInfo.Equals(System.Object)">
      <summary>Determines whether the specified object is the same culture as the current <see cref="T:System.Globalization.CultureInfo"></see>.</summary>
      <param name="value">The object to compare with the current <see cref="T:System.Globalization.CultureInfo"></see>.</param>
      <returns>true if <paramref name="value">value</paramref> is the same culture as the current <see cref="T:System.Globalization.CultureInfo"></see>; otherwise, false.</returns>
    </member>
    <member name="M:System.Globalization.CultureInfo.GetFormat(System.Type)">
      <summary>Gets an object that defines how to format the specified type.</summary>
      <param name="formatType">The <see cref="T:System.Type"></see> for which to get a formatting object. This method only supports the <see cref="T:System.Globalization.NumberFormatInfo"></see> and <see cref="T:System.Globalization.DateTimeFormatInfo"></see> types.</param>
      <returns>The value of the <see cref="P:System.Globalization.CultureInfo.NumberFormat"></see> property, which is a <see cref="T:System.Globalization.NumberFormatInfo"></see> containing the default number format information for the current <see cref="T:System.Globalization.CultureInfo"></see>, if <paramref name="formatType">formatType</paramref> is the <see cref="T:System.Type"></see> object for the <see cref="T:System.Globalization.NumberFormatInfo"></see> class.   -or-   The value of the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat"></see> property, which is a <see cref="T:System.Globalization.DateTimeFormatInfo"></see> containing the default date and time format information for the current <see cref="T:System.Globalization.CultureInfo"></see>, if <paramref name="formatType">formatType</paramref> is the <see cref="T:System.Type"></see> object for the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> class.   -or-   null, if <paramref name="formatType">formatType</paramref> is any other object.</returns>
    </member>
    <member name="M:System.Globalization.CultureInfo.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Globalization.CultureInfo"></see>, suitable for hashing algorithms and data structures, such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.InvariantCulture">
      <summary>Gets the <see cref="T:System.Globalization.CultureInfo"></see> object that is culture-independent (invariant).</summary>
      <returns>The object that is culture-independent (invariant).</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.IsNeutralCulture">
      <summary>Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo"></see> represents a neutral culture.</summary>
      <returns>true if the current <see cref="T:System.Globalization.CultureInfo"></see> represents a neutral culture; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.IsReadOnly">
      <summary>Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo"></see> is read-only.</summary>
      <returns>true if the current <see cref="T:System.Globalization.CultureInfo"></see> is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.Name">
      <summary>Gets the culture name in the format languagecode2-country/regioncode2.</summary>
      <returns>The culture name in the format languagecode2-country/regioncode2. languagecode2 is a lowercase two-letter code derived from ISO 639-1. country/regioncode2 is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.NativeName">
      <summary>Gets the culture name, consisting of the language, the country/region, and the optional script, that the culture is set to display.</summary>
      <returns>The culture name. consisting of the full name of the language, the full name of the country/region, and the optional script. The format is discussed in the description of the <see cref="T:System.Globalization.CultureInfo"></see> class.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.NumberFormat">
      <summary>Gets or sets a <see cref="T:System.Globalization.NumberFormatInfo"></see> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</summary>
      <returns>A <see cref="T:System.Globalization.NumberFormatInfo"></see> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</returns>
      <exception cref="T:System.ArgumentNullException">The property is set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Globalization.CultureInfo.NumberFormat"></see> property or any of the <see cref="T:System.Globalization.NumberFormatInfo"></see> properties is set, and the <see cref="T:System.Globalization.CultureInfo"></see> is read-only.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.OptionalCalendars">
      <summary>Gets the list of calendars that can be used by the culture.</summary>
      <returns>An array of type <see cref="T:System.Globalization.Calendar"></see> that represents the calendars that can be used by the culture represented by the current <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.Parent">
      <summary>Gets the <see cref="T:System.Globalization.CultureInfo"></see> that represents the parent culture of the current <see cref="T:System.Globalization.CultureInfo"></see>.</summary>
      <returns>The <see cref="T:System.Globalization.CultureInfo"></see> that represents the parent culture of the current <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
    </member>
    <member name="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)">
      <summary>Returns a read-only wrapper around the specified <see cref="T:System.Globalization.CultureInfo"></see> object.</summary>
      <param name="ci">The <see cref="T:System.Globalization.CultureInfo"></see> object to wrap.</param>
      <returns>A read-only <see cref="T:System.Globalization.CultureInfo"></see> wrapper around <paramref name="ci">ci</paramref>.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="ci">ci</paramref> is null.</exception>
    </member>
    <member name="P:System.Globalization.CultureInfo.TextInfo">
      <summary>Gets the <see cref="T:System.Globalization.TextInfo"></see> that defines the writing system associated with the culture.</summary>
      <returns>The <see cref="T:System.Globalization.TextInfo"></see> that defines the writing system associated with the culture.</returns>
    </member>
    <member name="M:System.Globalization.CultureInfo.ToString">
      <summary>Returns a string containing the name of the current <see cref="T:System.Globalization.CultureInfo"></see> in the format languagecode2-country/regioncode2.</summary>
      <returns>A string containing the name of the current <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName">
      <summary>Gets the ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo"></see>.</summary>
      <returns>The ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
    </member>
    <member name="T:System.Globalization.CultureNotFoundException">
      <summary>The exception that is thrown when a method attempts to construct a culture that is not available.</summary>
    </member>
    <member name="M:System.Globalization.CultureNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureNotFoundException"></see> class with its message string set to a system-supplied message.</summary>
    </member>
    <member name="M:System.Globalization.CultureNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureNotFoundException"></see> class with the specified error message.</summary>
      <param name="message">The error message to display with this exception.</param>
    </member>
    <member name="M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureNotFoundException"></see> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message to display with this exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureNotFoundException"></see> class with a specified error message and the name of the parameter that is the cause this exception.</summary>
      <param name="paramName">The name of the parameter that is the cause of the current exception.</param>
      <param name="message">The error message to display with this exception.</param>
    </member>
    <member name="M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureNotFoundException"></see> class with a specified error message, the invalid Culture Name, and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message to display with this exception.</param>
      <param name="invalidCultureName">The Culture Name that cannot be found.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:System.Globalization.CultureNotFoundException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.CultureNotFoundException"></see> class with a specified error message, the invalid Culture Name, and the name of the parameter that is the cause this exception.</summary>
      <param name="paramName">The name of the parameter that is the cause the current exception.</param>
      <param name="invalidCultureName">The Culture Name that cannot be found.</param>
      <param name="message">The error message to display with this exception.</param>
    </member>
    <member name="P:System.Globalization.CultureNotFoundException.InvalidCultureName">
      <summary>Gets the culture name that cannot be found.</summary>
      <returns>The invalid culture name.</returns>
    </member>
    <member name="P:System.Globalization.CultureNotFoundException.Message">
      <summary>Gets the error message that explains the reason for the exception.</summary>
      <returns>A text string describing the details of the exception.</returns>
    </member>
    <member name="T:System.Globalization.DateTimeFormatInfo">
      <summary>Provides culture-specific information about the format of date and time values.</summary>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.#ctor">
      <summary>Initializes a new writable instance of the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> class that is culture-independent (invariant).</summary>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames">
      <summary>Gets or sets a one-dimensional array of type <see cref="T:System.String"></see> containing the culture-specific abbreviated names of the days of the week.</summary>
      <returns>A one-dimensional array of type <see cref="T:System.String"></see> containing the culture-specific abbreviated names of the days of the week. The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> contains &quot;Sun&quot;, &quot;Mon&quot;, &quot;Tue&quot;, &quot;Wed&quot;, &quot;Thu&quot;, &quot;Fri&quot;, and &quot;Sat&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 7.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames">
      <summary>Gets or sets a string array of abbreviated month names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <returns>An array of abbreviated month names.</returns>
      <exception cref="T:System.ArgumentException">In a set operation, the array is multidimensional or has a length that is not exactly 13.</exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the array or one of the elements of the array is null.</exception>
      <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames">
      <summary>Gets or sets a one-dimensional string array that contains the culture-specific abbreviated names of the months.</summary>
      <returns>A one-dimensional string array with 13 elements that contains the culture-specific abbreviated names of the months. For 12-month calendars, the 13th element of the array is an empty string. The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> contains &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;, and &quot;&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 13.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.AMDesignator">
      <summary>Gets or sets the string designator for hours that are &quot;ante meridiem&quot; (before noon).</summary>
      <returns>The string designator for hours that are ante meridiem. The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> is &quot;AM&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.Calendar">
      <summary>Gets or sets the calendar to use for the current culture.</summary>
      <returns>The calendar to use for the current culture. The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> is a <see cref="T:System.Globalization.GregorianCalendar"></see> object.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a <see cref="T:System.Globalization.Calendar"></see> object that is not valid for the current culture.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule">
      <summary>Gets or sets a value that specifies which rule is used to determine the first calendar week of the year.</summary>
      <returns>A value that determines the first calendar week of the year. The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> is <see cref="F:System.Globalization.CalendarWeekRule.FirstDay"></see>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is not a valid <see cref="T:System.Globalization.CalendarWeekRule"></see> value.</exception>
      <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.Clone">
      <summary>Creates a shallow copy of the <see cref="T:System.Globalization.DateTimeFormatInfo"></see>.</summary>
      <returns>A new <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object copied from the original <see cref="T:System.Globalization.DateTimeFormatInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.CurrentInfo">
      <summary>Gets a read-only <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object that formats values based on the current culture.</summary>
      <returns>A read-only <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object based on the <see cref="T:System.Globalization.CultureInfo"></see> object for the current thread.</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.DayNames">
      <summary>Gets or sets a one-dimensional string array that contains the culture-specific full names of the days of the week.</summary>
      <returns>A one-dimensional string array that contains the culture-specific full names of the days of the week. The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> contains &quot;Sunday&quot;, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, and &quot;Saturday&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 7.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek">
      <summary>Gets or sets the first day of the week.</summary>
      <returns>An enumeration value that represents the first day of the week. The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> is <see cref="F:System.DayOfWeek.Sunday"></see>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is not a valid <see cref="T:System.DayOfWeek"></see> value.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern">
      <summary>Gets or sets the custom format string for a long date and long time value.</summary>
      <returns>The custom format string for a long date and long time value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)">
      <summary>Returns the culture-specific abbreviated name of the specified day of the week based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <param name="dayofweek">A <see cref="T:System.DayOfWeek"></see> value.</param>
      <returns>The culture-specific abbreviated name of the day of the week represented by <paramref name="dayofweek">dayofweek</paramref>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek">dayofweek</paramref> is not a valid <see cref="T:System.DayOfWeek"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)">
      <summary>Returns the string containing the abbreviated name of the specified era, if an abbreviation exists.</summary>
      <param name="era">The integer representing the era.</param>
      <returns>A string containing the abbreviated name of the specified era, if an abbreviation exists.   -or-   A string containing the full name of the era, if an abbreviation does not exist.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era">era</paramref> does not represent a valid era in the calendar specified in the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar"></see> property.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)">
      <summary>Returns the culture-specific abbreviated name of the specified month based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <param name="month">An integer from 1 through 13 representing the name of the month to retrieve.</param>
      <returns>The culture-specific abbreviated name of the month represented by <paramref name="month">month</paramref>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month">month</paramref> is less than 1 or greater than 13.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)">
      <summary>Returns the culture-specific full name of the specified day of the week based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <param name="dayofweek">A <see cref="T:System.DayOfWeek"></see> value.</param>
      <returns>The culture-specific full name of the day of the week represented by <paramref name="dayofweek">dayofweek</paramref>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dayofweek">dayofweek</paramref> is not a valid <see cref="T:System.DayOfWeek"></see> value.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)">
      <summary>Returns the integer representing the specified era.</summary>
      <param name="eraName">The string containing the name of the era.</param>
      <returns>The integer representing the era, if <paramref name="eraName">eraName</paramref> is valid; otherwise, -1.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="eraName">eraName</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)">
      <summary>Returns the string containing the name of the specified era.</summary>
      <param name="era">The integer representing the era.</param>
      <returns>A string containing the name of the era.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="era">era</paramref> does not represent a valid era in the calendar specified in the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar"></see> property.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)">
      <summary>Returns an object of the specified type that provides a date and time  formatting service.</summary>
      <param name="formatType">The type of the required formatting service.</param>
      <returns>The current  object, if <paramref name="formatType">formatType</paramref> is the same as the type of the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see>; otherwise, null.</returns>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)">
      <summary>Returns the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object associated with the specified <see cref="T:System.IFormatProvider"></see>.</summary>
      <param name="provider">The <see cref="T:System.IFormatProvider"></see> that gets the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.   -or-  null to get <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo"></see>.</param>
      <returns>A <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object associated with <see cref="T:System.IFormatProvider"></see>.</returns>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)">
      <summary>Returns the culture-specific full name of the specified month based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <param name="month">An integer from 1 through 13 representing the name of the month to retrieve.</param>
      <returns>The culture-specific full name of the month represented by <paramref name="month">month</paramref>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="month">month</paramref> is less than 1 or greater than 13.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.InvariantInfo">
      <summary>Gets the default read-only <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object that is culture-independent (invariant).</summary>
      <returns>A read-only object that is culture-independent (invariant).</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</summary>
      <returns>true if the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.LongDatePattern">
      <summary>Gets or sets the custom format string for a long date value.</summary>
      <returns>The custom format string for a long date value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.LongTimePattern">
      <summary>Gets or sets the custom format string for a long time value.</summary>
      <returns>The format pattern for a long time value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern">
      <summary>Gets or sets the custom format string for a month and day value.</summary>
      <returns>The custom format string for a month and day value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames">
      <summary>Gets or sets a string array of month names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <returns>A string array of month names.</returns>
      <exception cref="T:System.ArgumentException">In a set operation, the array is multidimensional or has a length that is not exactly 13.</exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the array or one of its elements is null.</exception>
      <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.MonthNames">
      <summary>Gets or sets a one-dimensional array of type <see cref="T:System.String"></see> containing the culture-specific full names of the months.</summary>
      <returns>A one-dimensional array of type <see cref="T:System.String"></see> containing the culture-specific full names of the months. In a 12-month calendar, the 13th element of the array is an empty string. The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> contains &quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;, &quot;December&quot;, and &quot;&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an array that is multidimensional or that has a length that is not exactly 13.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.PMDesignator">
      <summary>Gets or sets the string designator for hours that are &quot;post meridiem&quot; (after noon).</summary>
      <returns>The string designator for hours that are &quot;post meridiem&quot; (after noon). The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo"></see> is &quot;PM&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)">
      <summary>Returns a read-only <see cref="T:System.Globalization.DateTimeFormatInfo"></see> wrapper.</summary>
      <param name="dtfi">The <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object to wrap.</param>
      <returns>A read-only <see cref="T:System.Globalization.DateTimeFormatInfo"></see> wrapper.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="dtfi">dtfi</paramref> is null.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern">
      <summary>Gets the custom format string for a time value that is based on the Internet Engineering Task Force (IETF) Request for Comments (RFC) 1123 specification.</summary>
      <returns>The custom format string for a time value that is based on the IETF RFC 1123 specification.</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern">
      <summary>Gets or sets the custom format string for a short date value.</summary>
      <returns>The custom format string for a short date value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames">
      <summary>Gets or sets a string array of the shortest unique abbreviated day names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object.</summary>
      <returns>A string array of day names.</returns>
      <exception cref="T:System.ArgumentException">In a set operation, the array does not have exactly seven elements.</exception>
      <exception cref="T:System.ArgumentNullException">In a set operation, the value array or one of the elements of the value array is null.</exception>
      <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern">
      <summary>Gets or sets the custom format string for a short time value.</summary>
      <returns>The custom format string for a short time value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern">
      <summary>Gets the custom format string for a sortable date and time value.</summary>
      <returns>The custom format string for a sortable date and time value.</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern">
      <summary>Gets the custom format string for a universal, sortable date and time string.</summary>
      <returns>The custom format string for a universal, sortable date and time string.</returns>
    </member>
    <member name="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern">
      <summary>Gets or sets the custom format string for a year and month value.</summary>
      <returns>The custom format string for a year and month value.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="T:System.Globalization.NumberFormatInfo">
      <summary>Provides culture-specific information for formatting and parsing numeric values.</summary>
    </member>
    <member name="M:System.Globalization.NumberFormatInfo.#ctor">
      <summary>Initializes a new writable instance of the <see cref="T:System.Globalization.NumberFormatInfo"></see> class that is culture-independent (invariant).</summary>
    </member>
    <member name="M:System.Globalization.NumberFormatInfo.Clone">
      <summary>Creates a shallow copy of the <see cref="T:System.Globalization.NumberFormatInfo"></see> object.</summary>
      <returns>A new object copied from the original <see cref="T:System.Globalization.NumberFormatInfo"></see> object.</returns>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits">
      <summary>Gets or sets the number of decimal places to use in currency values.</summary>
      <returns>The number of decimal places to use in currency values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 2.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 99.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator">
      <summary>Gets or sets the string to use as the decimal separator in currency values.</summary>
      <returns>The string to use as the decimal separator in currency values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;.&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an empty string.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator">
      <summary>Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</summary>
      <returns>The string that separates groups of digits to the left of the decimal in currency values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;,&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes">
      <summary>Gets or sets the number of digits in each group to the left of the decimal in currency values.</summary>
      <returns>The number of digits in each group to the left of the decimal in currency values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is a one-dimensional array with only one element, which is set to 3.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set and the array contains an entry that is less than 0 or greater than 9.   -or-   The property is being set and the array contains an entry, other than the last entry, that is set to 0.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern">
      <summary>Gets or sets the format pattern for negative currency values.</summary>
      <returns>The format pattern for negative currency values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 0, which represents &quot;($n)&quot;, where &quot;$&quot; is the <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol"></see> and <paramref name="n">n</paramref> is a number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 15.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern">
      <summary>Gets or sets the format pattern for positive currency values.</summary>
      <returns>The format pattern for positive currency values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 0, which represents &quot;$n&quot;, where &quot;$&quot; is the <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol"></see> and <paramref name="n">n</paramref> is a number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 3.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrencySymbol">
      <summary>Gets or sets the string to use as the currency symbol.</summary>
      <returns>The string to use as the currency symbol. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;¤&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.CurrentInfo">
      <summary>Gets a read-only <see cref="T:System.Globalization.NumberFormatInfo"></see> that formats values based on the current culture.</summary>
      <returns>A read-only <see cref="T:System.Globalization.NumberFormatInfo"></see> based on the culture of the current thread.</returns>
    </member>
    <member name="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)">
      <summary>Gets an object of the specified type that provides a number formatting service.</summary>
      <param name="formatType">The <see cref="T:System.Type"></see> of the required formatting service.</param>
      <returns>The current <see cref="T:System.Globalization.NumberFormatInfo"></see>, if <paramref name="formatType">formatType</paramref> is the same as the type of the current <see cref="T:System.Globalization.NumberFormatInfo"></see>; otherwise, null.</returns>
    </member>
    <member name="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)">
      <summary>Gets the <see cref="T:System.Globalization.NumberFormatInfo"></see> associated with the specified <see cref="T:System.IFormatProvider"></see>.</summary>
      <param name="formatProvider">The <see cref="T:System.IFormatProvider"></see> used to get the <see cref="T:System.Globalization.NumberFormatInfo"></see>.   -or-  null to get <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo"></see>.</param>
      <returns>The <see cref="T:System.Globalization.NumberFormatInfo"></see> associated with the specified <see cref="T:System.IFormatProvider"></see>.</returns>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.InvariantInfo">
      <summary>Gets a read-only <see cref="T:System.Globalization.NumberFormatInfo"></see> object that is culture-independent (invariant).</summary>
      <returns>A read-only  object that is culture-independent (invariant).</returns>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.IsReadOnly">
      <summary>Gets a value that indicates whether this <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</summary>
      <returns>true if the <see cref="T:System.Globalization.NumberFormatInfo"></see> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NaNSymbol">
      <summary>Gets or sets the string that represents the IEEE NaN (not a number) value.</summary>
      <returns>The string that represents the IEEE NaN (not a number) value. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;NaN&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol">
      <summary>Gets or sets the string that represents negative infinity.</summary>
      <returns>The string that represents negative infinity. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;-Infinity&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NegativeSign">
      <summary>Gets or sets the string that denotes that the associated number is negative.</summary>
      <returns>The string that denotes that the associated number is negative. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;-&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits">
      <summary>Gets or sets the number of decimal places to use in numeric values.</summary>
      <returns>The number of decimal places to use in numeric values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 2.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 99.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator">
      <summary>Gets or sets the string to use as the decimal separator in numeric values.</summary>
      <returns>The string to use as the decimal separator in numeric values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;.&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an empty string.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator">
      <summary>Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</summary>
      <returns>The string that separates groups of digits to the left of the decimal in numeric values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;,&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NumberGroupSizes">
      <summary>Gets or sets the number of digits in each group to the left of the decimal in numeric values.</summary>
      <returns>The number of digits in each group to the left of the decimal in numeric values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is a one-dimensional array with only one element, which is set to 3.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set and the array contains an entry that is less than 0 or greater than 9.   -or-   The property is being set and the array contains an entry, other than the last entry, that is set to 0.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.NumberNegativePattern">
      <summary>Gets or sets the format pattern for negative numeric values.</summary>
      <returns>The format pattern for negative numeric values.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 4.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits">
      <summary>Gets or sets the number of decimal places to use in percent values.</summary>
      <returns>The number of decimal places to use in percent values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 2.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 99.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator">
      <summary>Gets or sets the string to use as the decimal separator in percent values.</summary>
      <returns>The string to use as the decimal separator in percent values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;.&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
      <exception cref="T:System.ArgumentException">The property is being set to an empty string.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator">
      <summary>Gets or sets the string that separates groups of digits to the left of the decimal in percent values.</summary>
      <returns>The string that separates groups of digits to the left of the decimal in percent values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;,&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentGroupSizes">
      <summary>Gets or sets the number of digits in each group to the left of the decimal in percent values.</summary>
      <returns>The number of digits in each group to the left of the decimal in percent values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is a one-dimensional array with only one element, which is set to 3.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.ArgumentException">The property is being set and the array contains an entry that is less than 0 or greater than 9.   -or-   The property is being set and the array contains an entry, other than the last entry, that is set to 0.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentNegativePattern">
      <summary>Gets or sets the format pattern for negative percent values.</summary>
      <returns>The format pattern for negative percent values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 0, which represents &quot;-n %&quot;, where &quot;%&quot; is the <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol"></see> and <paramref name="n">n</paramref> is a number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 11.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentPositivePattern">
      <summary>Gets or sets the format pattern for positive percent values.</summary>
      <returns>The format pattern for positive percent values. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is 0, which represents &quot;n %&quot;, where &quot;%&quot; is the <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol"></see> and <paramref name="n">n</paramref> is a number.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than 0 or greater than 3.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PercentSymbol">
      <summary>Gets or sets the string to use as the percent symbol.</summary>
      <returns>The string to use as the percent symbol. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;%&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PerMilleSymbol">
      <summary>Gets or sets the string to use as the per mille symbol.</summary>
      <returns>The string to use as the per mille symbol. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;‰&quot;, which is the Unicode character U+2030.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol">
      <summary>Gets or sets the string that represents positive infinity.</summary>
      <returns>The string that represents positive infinity. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;Infinity&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">The property is being set to null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="P:System.Globalization.NumberFormatInfo.PositiveSign">
      <summary>Gets or sets the string that denotes that the associated number is positive.</summary>
      <returns>The string that denotes that the associated number is positive. The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo"></see> is &quot;+&quot;.</returns>
      <exception cref="T:System.ArgumentNullException">In a set operation, the value to be assigned is null.</exception>
      <exception cref="T:System.InvalidOperationException">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo"></see> object is read-only.</exception>
    </member>
    <member name="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)">
      <summary>Returns a read-only <see cref="T:System.Globalization.NumberFormatInfo"></see> wrapper.</summary>
      <param name="nfi">The <see cref="T:System.Globalization.NumberFormatInfo"></see> to wrap.</param>
      <returns>A read-only <see cref="T:System.Globalization.NumberFormatInfo"></see> wrapper around <paramref name="nfi">nfi</paramref>.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="nfi">nfi</paramref> is null.</exception>
    </member>
    <member name="T:System.Globalization.RegionInfo">
      <summary>Contains information about the country/region.</summary>
    </member>
    <member name="M:System.Globalization.RegionInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.RegionInfo"></see> class based on the country/region or specific culture, specified by name.</summary>
      <param name="name">A string that contains a two-letter code defined in ISO 3166 for country/region.   -or-   A string that contains the culture name for a specific culture, custom culture, or Windows-only culture. If the culture name is not in RFC 4646 format, your application should specify the entire culture name instead of just the country/region.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="name">name</paramref> is not a valid country/region name or specific culture name.</exception>
    </member>
    <member name="P:System.Globalization.RegionInfo.CurrencySymbol">
      <summary>Gets the currency symbol associated with the country/region.</summary>
      <returns>The currency symbol associated with the country/region.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.CurrentRegion">
      <summary>Gets the <see cref="T:System.Globalization.RegionInfo"></see> that represents the country/region used by the current thread.</summary>
      <returns>The <see cref="T:System.Globalization.RegionInfo"></see> that represents the country/region used by the current thread.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.DisplayName">
      <summary>Gets the full name of the country/region in the language of the localized version of .NET Framework.</summary>
      <returns>The full name of the country/region in the language of the localized version of .NET Framework.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.EnglishName">
      <summary>Gets the full name of the country/region in English.</summary>
      <returns>The full name of the country/region in English.</returns>
    </member>
    <member name="M:System.Globalization.RegionInfo.Equals(System.Object)">
      <summary>Determines whether the specified object is the same instance as the current <see cref="T:System.Globalization.RegionInfo"></see>.</summary>
      <param name="value">The object to compare with the current <see cref="T:System.Globalization.RegionInfo"></see>.</param>
      <returns>true if the <paramref name="value">value</paramref> parameter is a <see cref="T:System.Globalization.RegionInfo"></see> object and its <see cref="P:System.Globalization.RegionInfo.Name"></see> property is the same as the <see cref="P:System.Globalization.RegionInfo.Name"></see> property of the current <see cref="T:System.Globalization.RegionInfo"></see> object; otherwise, false.</returns>
    </member>
    <member name="M:System.Globalization.RegionInfo.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Globalization.RegionInfo"></see>, suitable for hashing algorithms and data structures, such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Globalization.RegionInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.IsMetric">
      <summary>Gets a value indicating whether the country/region uses the metric system for measurements.</summary>
      <returns>true if the country/region uses the metric system for measurements; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.ISOCurrencySymbol">
      <summary>Gets the three-character ISO 4217 currency symbol associated with the country/region.</summary>
      <returns>The three-character ISO 4217 currency symbol associated with the country/region.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.Name">
      <summary>Gets the name or ISO 3166 two-letter country/region code for the current <see cref="T:System.Globalization.RegionInfo"></see> object.</summary>
      <returns>The value specified by the <paramref name="name">name</paramref> parameter of the <see cref="M:System.Globalization.RegionInfo.#ctor(System.String)"></see> constructor. The return value is in uppercase.   -or-   The two-letter code defined in ISO 3166 for the country/region specified by the <paramref name="culture">culture</paramref> parameter of the <see cref="M:System.Globalization.RegionInfo.#ctor(System.Int32)"></see> constructor. The return value is in uppercase.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.NativeName">
      <summary>Gets the name of a country/region formatted in the native language of the country/region.</summary>
      <returns>The native name of the country/region formatted in the language associated with the ISO 3166 country/region code.</returns>
    </member>
    <member name="M:System.Globalization.RegionInfo.ToString">
      <summary>Returns a string containing the culture name or ISO 3166 two-letter country/region codes specified for the current <see cref="T:System.Globalization.RegionInfo"></see>.</summary>
      <returns>A string containing the culture name or ISO 3166 two-letter country/region codes defined for the current <see cref="T:System.Globalization.RegionInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.RegionInfo.TwoLetterISORegionName">
      <summary>Gets the two-letter code defined in ISO 3166 for the country/region.</summary>
      <returns>The two-letter code defined in ISO 3166 for the country/region.</returns>
    </member>
    <member name="T:System.Globalization.StringInfo">
      <summary>Provides functionality to split a string into text elements and to iterate through those text elements.</summary>
    </member>
    <member name="M:System.Globalization.StringInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo"></see> class.</summary>
    </member>
    <member name="M:System.Globalization.StringInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo"></see> class to a specified string.</summary>
      <param name="value">A string to initialize this <see cref="T:System.Globalization.StringInfo"></see> object.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="value">value</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.StringInfo.Equals(System.Object)">
      <summary>Indicates whether the current <see cref="T:System.Globalization.StringInfo"></see> object is equal to a specified object.</summary>
      <param name="value">An object.</param>
      <returns>true if the <paramref name="value">value</paramref> parameter is a <see cref="T:System.Globalization.StringInfo"></see> object and its <see cref="P:System.Globalization.StringInfo.String"></see> property equals the <see cref="P:System.Globalization.StringInfo.String"></see> property of this <see cref="T:System.Globalization.StringInfo"></see> object; otherwise, false.</returns>
    </member>
    <member name="M:System.Globalization.StringInfo.GetHashCode">
      <summary>Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo"></see> object.</summary>
      <returns>A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo"></see> object.</returns>
    </member>
    <member name="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
      <summary>Gets the first text element in a specified string.</summary>
      <param name="str">The string from which to get the text element.</param>
      <returns>A string containing the first text element in the specified string.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
      <summary>Gets the text element at the specified index of the specified string.</summary>
      <param name="str">The string from which to get the text element.</param>
      <param name="index">The zero-based index at which the text element starts.</param>
      <returns>A string containing the text element at the specified index of the specified string.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is outside the range of valid indexes for <paramref name="str">str</paramref>.</exception>
    </member>
    <member name="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
      <summary>Returns an enumerator that iterates through the text elements of the entire string.</summary>
      <param name="str">The string to iterate through.</param>
      <returns>A <see cref="T:System.Globalization.TextElementEnumerator"></see> for the entire string.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
      <summary>Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</summary>
      <param name="str">The string to iterate through.</param>
      <param name="index">The zero-based index at which to start iterating.</param>
      <returns>A <see cref="T:System.Globalization.TextElementEnumerator"></see> for the string starting at <paramref name="index">index</paramref>.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is outside the range of valid indexes for <paramref name="str">str</paramref>.</exception>
    </member>
    <member name="P:System.Globalization.StringInfo.LengthInTextElements">
      <summary>Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo"></see> object.</summary>
      <returns>The number of base characters, surrogate pairs, and combining character sequences in this <see cref="T:System.Globalization.StringInfo"></see> object.</returns>
    </member>
    <member name="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
      <summary>Returns the indexes of each base character, high surrogate, or control character within the specified string.</summary>
      <param name="str">The string to search.</param>
      <returns>An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
    </member>
    <member name="P:System.Globalization.StringInfo.String">
      <summary>Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo"></see> object.</summary>
      <returns>The string that is the value of the current <see cref="T:System.Globalization.StringInfo"></see> object.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
    </member>
    <member name="T:System.Globalization.TextElementEnumerator">
      <summary>Enumerates the text elements of a string.</summary>
    </member>
    <member name="P:System.Globalization.TextElementEnumerator.Current">
      <summary>Gets the current text element in the string.</summary>
      <returns>An object containing the current text element in the string.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first text element of the string or after the last text element.</exception>
    </member>
    <member name="P:System.Globalization.TextElementEnumerator.ElementIndex">
      <summary>Gets the index of the text element that the enumerator is currently positioned over.</summary>
      <returns>The index of the text element that the enumerator is currently positioned over.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first text element of the string or after the last text element.</exception>
    </member>
    <member name="M:System.Globalization.TextElementEnumerator.GetTextElement">
      <summary>Gets the current text element in the string.</summary>
      <returns>A new string containing the current text element in the string being read.</returns>
      <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first text element of the string or after the last text element.</exception>
    </member>
    <member name="M:System.Globalization.TextElementEnumerator.MoveNext">
      <summary>Advances the enumerator to the next text element of the string.</summary>
      <returns>true if the enumerator was successfully advanced to the next text element; false if the enumerator has passed the end of the string.</returns>
    </member>
    <member name="M:System.Globalization.TextElementEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first text element in the string.</summary>
    </member>
    <member name="T:System.Globalization.TextInfo">
      <summary>Defines text properties and behaviors, such as casing, that are specific to a writing system.</summary>
    </member>
    <member name="P:System.Globalization.TextInfo.CultureName">
      <summary>Gets the name of the culture associated with the current <see cref="T:System.Globalization.TextInfo"></see> object.</summary>
      <returns>The name of a culture.</returns>
    </member>
    <member name="M:System.Globalization.TextInfo.Equals(System.Object)">
      <summary>Determines whether the specified object represents the same writing system as the current <see cref="T:System.Globalization.TextInfo"></see> object.</summary>
      <param name="obj">The object to compare with the current <see cref="T:System.Globalization.TextInfo"></see>.</param>
      <returns>true if <paramref name="obj">obj</paramref> represents the same writing system as the current <see cref="T:System.Globalization.TextInfo"></see>; otherwise, false.</returns>
    </member>
    <member name="M:System.Globalization.TextInfo.GetHashCode">
      <summary>Serves as a hash function for the current <see cref="T:System.Globalization.TextInfo"></see>, suitable for hashing algorithms and data structures, such as a hash table.</summary>
      <returns>A hash code for the current <see cref="T:System.Globalization.TextInfo"></see>.</returns>
    </member>
    <member name="P:System.Globalization.TextInfo.IsReadOnly">
      <summary>Gets a value indicating whether the current <see cref="T:System.Globalization.TextInfo"></see> object is read-only.</summary>
      <returns>true if the current <see cref="T:System.Globalization.TextInfo"></see> object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.TextInfo.IsRightToLeft">
      <summary>Gets a value indicating whether the current <see cref="T:System.Globalization.TextInfo"></see> object represents a writing system where text flows from right to left.</summary>
      <returns>true if text flows from right to left; otherwise, false.</returns>
    </member>
    <member name="P:System.Globalization.TextInfo.ListSeparator">
      <summary>Gets or sets the string that separates items in a list.</summary>
      <returns>The string that separates items in a list.</returns>
      <exception cref="T:System.ArgumentNullException">The value in a set operation is null.</exception>
      <exception cref="T:System.InvalidOperationException">In a set operation, the current <see cref="T:System.Globalization.TextInfo"></see> object is read-only.</exception>
    </member>
    <member name="M:System.Globalization.TextInfo.ToLower(System.Char)">
      <summary>Converts the specified character to lowercase.</summary>
      <param name="c">The character to convert to lowercase.</param>
      <returns>The specified character converted to lowercase.</returns>
    </member>
    <member name="M:System.Globalization.TextInfo.ToLower(System.String)">
      <summary>Converts the specified string to lowercase.</summary>
      <param name="str">The string to convert to lowercase.</param>
      <returns>The specified string converted to lowercase.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
    </member>
    <member name="M:System.Globalization.TextInfo.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Globalization.TextInfo"></see>.</summary>
      <returns>A string that represents the current <see cref="T:System.Globalization.TextInfo"></see>.</returns>
    </member>
    <member name="M:System.Globalization.TextInfo.ToUpper(System.Char)">
      <summary>Converts the specified character to uppercase.</summary>
      <param name="c">The character to convert to uppercase.</param>
      <returns>The specified character converted to uppercase.</returns>
    </member>
    <member name="M:System.Globalization.TextInfo.ToUpper(System.String)">
      <summary>Converts the specified string to uppercase.</summary>
      <param name="str">The string to convert to uppercase.</param>
      <returns>The specified string converted to uppercase.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="str">str</paramref> is null.</exception>
    </member>
    <member name="T:System.Globalization.UnicodeCategory">
      <summary>Defines the Unicode category of a character.</summary>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.ClosePunctuation">
      <summary>Closing character of one of the paired punctuation marks, such as parentheses, square brackets, and braces. Signified by the Unicode designation &quot;Pe&quot; (punctuation, close). The value is 21.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.ConnectorPunctuation">
      <summary>Connector punctuation character that connects two characters. Signified by the Unicode designation &quot;Pc&quot; (punctuation, connector). The value is 18.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.Control">
      <summary>Control code character, with a Unicode value of U+007F or in the range U+0000 through U+001F or U+0080 through U+009F. Signified by the Unicode designation &quot;Cc&quot; (other, control). The value is 14.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.CurrencySymbol">
      <summary>Currency symbol character. Signified by the Unicode designation &quot;Sc&quot; (symbol, currency). The value is 26.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.DashPunctuation">
      <summary>Dash or hyphen character. Signified by the Unicode designation &quot;Pd&quot; (punctuation, dash). The value is 19.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.DecimalDigitNumber">
      <summary>Decimal digit character, that is, a character in the range 0 through 9. Signified by the Unicode designation &quot;Nd&quot; (number, decimal digit). The value is 8.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.EnclosingMark">
      <summary>Enclosing mark character, which is a nonspacing combining character that surrounds all previous characters up to and including a base character. Signified by the Unicode designation &quot;Me&quot; (mark, enclosing). The value is 7.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.FinalQuotePunctuation">
      <summary>Closing or final quotation mark character. Signified by the Unicode designation &quot;Pf&quot; (punctuation, final quote). The value is 23.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.Format">
      <summary>Format character that affects the layout of text or the operation of text processes, but is not normally rendered. Signified by the Unicode designation &quot;Cf&quot; (other, format). The value is 15.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.InitialQuotePunctuation">
      <summary>Opening or initial quotation mark character. Signified by the Unicode designation &quot;Pi&quot; (punctuation, initial quote). The value is 22.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.LetterNumber">
      <summary>Number represented by a letter, instead of a decimal digit, for example, the Roman numeral for five, which is &quot;V&quot;. The indicator is signified by the Unicode designation &quot;Nl&quot; (number, letter). The value is 9.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.LineSeparator">
      <summary>Character that is used to separate lines of text. Signified by the Unicode designation &quot;Zl&quot; (separator, line). The value is 12.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.LowercaseLetter">
      <summary>Lowercase letter. Signified by the Unicode designation &quot;Ll&quot; (letter, lowercase). The value is 1.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.MathSymbol">
      <summary>Mathematical symbol character, such as &quot;+&quot; or &quot;= &quot;. Signified by the Unicode designation &quot;Sm&quot; (symbol, math). The value is 25.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.ModifierLetter">
      <summary>Modifier letter character, which is free-standing spacing character that indicates modifications of a preceding letter. Signified by the Unicode designation &quot;Lm&quot; (letter, modifier). The value is 3.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.ModifierSymbol">
      <summary>Modifier symbol character, which indicates modifications of surrounding characters. For example, the fraction slash indicates that the number to the left is the numerator and the number to the right is the denominator. The indicator is signified by the Unicode designation &quot;Sk&quot; (symbol, modifier). The value is 27.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.NonSpacingMark">
      <summary>Nonspacing character that indicates modifications of a base character. Signified by the Unicode designation &quot;Mn&quot; (mark, nonspacing). The value is 5.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.OpenPunctuation">
      <summary>Opening character of one of the paired punctuation marks, such as parentheses, square brackets, and braces. Signified by the Unicode designation &quot;Ps&quot; (punctuation, open). The value is 20.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.OtherLetter">
      <summary>Letter that is not an uppercase letter, a lowercase letter, a titlecase letter, or a modifier letter. Signified by the Unicode designation &quot;Lo&quot; (letter, other). The value is 4.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.OtherNotAssigned">
      <summary>Character that is not assigned to any Unicode category. Signified by the Unicode designation &quot;Cn&quot; (other, not assigned). The value is 29.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.OtherNumber">
      <summary>Number that is neither a decimal digit nor a letter number, for example, the fraction 1/2. The indicator is signified by the Unicode designation &quot;No&quot; (number, other). The value is 10.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.OtherPunctuation">
      <summary>Punctuation character that is not a connector, a dash, open punctuation, close punctuation, an initial quote, or a final quote. Signified by the Unicode designation &quot;Po&quot; (punctuation, other). The value is 24.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.OtherSymbol">
      <summary>Symbol character that is not a mathematical symbol, a currency symbol or a modifier symbol. Signified by the Unicode designation &quot;So&quot; (symbol, other). The value is 28.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.ParagraphSeparator">
      <summary>Character used to separate paragraphs. Signified by the Unicode designation &quot;Zp&quot; (separator, paragraph). The value is 13.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.PrivateUse">
      <summary>Private-use character, with a Unicode value in the range U+E000 through U+F8FF. Signified by the Unicode designation &quot;Co&quot; (other, private use). The value is 17.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.SpaceSeparator">
      <summary>Space character, which has no glyph but is not a control or format character. Signified by the Unicode designation &quot;Zs&quot; (separator, space). The value is 11.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.SpacingCombiningMark">
      <summary>Spacing character that indicates modifications of a base character and affects the width of the glyph for that base character. Signified by the Unicode designation &quot;Mc&quot; (mark, spacing combining). The value is 6.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.Surrogate">
      <summary>High surrogate or a low surrogate character. Surrogate code values are in the range U+D800 through U+DFFF. Signified by the Unicode designation &quot;Cs&quot; (other, surrogate). The value is 16.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.TitlecaseLetter">
      <summary>Titlecase letter. Signified by the Unicode designation &quot;Lt&quot; (letter, titlecase). The value is 2.</summary>
      <returns></returns>
    </member>
    <member name="F:System.Globalization.UnicodeCategory.UppercaseLetter">
      <summary>Uppercase letter. Signified by the Unicode designation &quot;Lu&quot; (letter, uppercase). The value is 0.</summary>
      <returns></returns>
    </member>
  </members>
</doc></span>