<Project DefaultTargets="Build">

  <Import Project="$(MSBuildThisFileDirectory)directories.props" />

  <!-- Build Properties -->
  <PropertyGroup>
    <Configuration>Release</Configuration>
    <GenDummyCommand>dotnet $(GenDummyDir)\GenDummy.dll</GenDummyCommand>
    <PublicDummyProjectDir>$(ProjectRootDir).dummy\</PublicDummyProjectDir>
    <InternalDummyProjectDir>$(ProjectRootDir)internal\.dummy\</InternalDummyProjectDir>
  </PropertyGroup>

  <!-- Projects to build -->
  <ItemGroup>
    <ProjectToBuild Include="$(ProjectSrcDir)\$(Project)\$(Project).csproj" Condition="'$(Project)' != ''">
      <Visibility>Public</Visibility>
    </ProjectToBuild>
    <ProjectToBuild Include="$(ProjectSrcDir)**\*.csproj" Condition="'$(Project)' == ''">
      <Visibility>Public</Visibility>
    </ProjectToBuild>
    <ProjectToBuild Include="$(InternalProjectSrcDir)**\*.csproj" Condition="'$(Project)' == ''">
      <Visibility>Internal</Visibility>
    </ProjectToBuild>
  </ItemGroup>

  <!--
    Target : Clean
    ==============
    Delete all artifacts,
    including the Artifacts/ directory and the obj/ directories for all projects.
  -->
  <Target Name="Clean">

    <ItemGroup>
      <ProjectIntermediateAllFiles Include="$(ProjectSrcDir)**\obj\*" />
      <ProjectIntermediateAllFiles Include="$(InternalProjectSrcDir)**\obj\*" />
      <ProjectIntermediateDir Include="@(ProjectIntermediateAllFiles->'%(RootDir)%(Directory)'->Distinct())" />
    </ItemGroup>

    <ItemGroup>
      <DirToRemove Include="$(OutputBaseDir)" />
      <DirToRemove Include="@(ProjectIntermediateDir)" />
      <DirToRemove Include="$(PublicDummyProjectDir)" />
      <DirToRemove Include="$(InternalDummyProjectDir)" />
    </ItemGroup>

    <RemoveDir Directories="@(DirToRemove)" />

  </Target>

  <!--
    Target : Restore
    ==============
    Restore all projects.
  -->
  <Target Name="Restore">

    <MSBuild Projects="@(ProjectToBuild)"
             Properties="Configuration=$(Configuration);RestoreSources=$(RestoreSources)"
             BuildInParallel="false"
             Targets="Restore" />

  </Target>

  <!--
    Target : Build
    ==============
    Build all projects.
  -->
  <Target Name="Build">

    <MSBuild Projects="@(ProjectToBuild)"
             Properties="Configuration=$(Configuration)"
             BuildInParallel="true"
             UseResultsCache="true"
             Targets="Build" />

    <MSBuild Projects="@(ProjectToBuild)"
             Properties="Configuration=$(Configuration)"
             BuildInParallel="false"
             Targets="CopyToArtifactsDirectory" />

  </Target>

  <!--
    Target : Dummy
    ==============
    Generate dummy assemblies of all projects.
  -->
  <Target Name="Dummy" DependsOnTargets="GenerateDummyProject">

    <ItemGroup>
      <DummyProjectToBuild Include="$(PublicDummyProjectDir)**\*.csproj" />
      <DummyProjectToBuild Include="$(InternalDummyProjectDir)**\*.csproj" />
    </ItemGroup>

    <MSBuild Projects="@(DummyProjectToBuild)"
             Properties="Configuration=$(Configuration);RestoreSources=$(RestoreSources)"
             BuildInParallel="false"
             Targets="Restore" />

    <MSBuild Projects="@(DummyProjectToBuild)"
             Properties="Configuration=$(Configuration);WarningLevel=0;OutDir=$(OutputDummyDir);ProduceReferenceAssembly=False"
             BuildInParallel="true"
             UseResultsCache="true"
             Targets="Build" />

  </Target>


  <Target Name="GenerateDummyProject" Inputs="@(ProjectToBuild)" Outputs="%(Filename)" >

    <PropertyGroup>
      <GeneratedDummyAssembly>$(OutputDummyDir)%(ProjectToBuild.Filename).dll</GeneratedDummyAssembly>
      <ClonedProjectsDir Condition="'%(ProjectToBuild.Visibility)' == 'Public'" >$(PublicDummyProjectDir)</ClonedProjectsDir>
      <ClonedProjectsDir Condition="'%(ProjectToBuild.Visibility)' == 'Internal'" >$(InternalDummyProjectDir)</ClonedProjectsDir>
    </PropertyGroup>

    <Message Text="[GenDummy] %(ProjectToBuild.Filename)" Importance="High" />
    <Message Text="Directory = %(ProjectToBuild.Directory)" Importance="High" />

    <Exec Command='$(GenDummyCommand) -project %(ProjectToBuild.Filename) -source %(ProjectToBuild.RootDir)%(ProjectToBuild.Directory).. -clonePath $(ClonedProjectsDir)' />

  </Target>

  <Target Name="AfterDummy">
    <Message Text="Clean Directory" Importance="High" />
    <RemoveDir Directories="$(PublicDummyProjectDir);$(InternalDummyProjectDir)" />
  </Target>

</Project>
